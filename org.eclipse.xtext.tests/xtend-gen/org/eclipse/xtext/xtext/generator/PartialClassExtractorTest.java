/**
 * Copyright (c) 2018 itemis AG (http://www.itemis.eu) and others.
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 */
package org.eclipse.xtext.xtext.generator;

import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xtext.generator.parser.antlr.splitting.PartialClassExtractor;
import org.junit.Assert;
import org.junit.Test;

/**
 * @author Christian Dietrich - Initial contribution and API
 */
@SuppressWarnings("all")
public class PartialClassExtractorTest {
  @Test
  public void testEnumRules() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("import org.eclipse.xtext.*;");
    _builder.newLine();
    _builder.append("import org.eclipse.xtext.parser.*;");
    _builder.newLine();
    _builder.append("import org.eclipse.xtext.parser.impl.*;");
    _builder.newLine();
    _builder.append("import org.eclipse.xtext.IGrammarAccess;");
    _builder.newLine();
    _builder.append("import org.eclipse.emf.common.util.Enumerator;");
    _builder.newLine();
    _builder.append("import org.eclipse.emf.ecore.util.EcoreUtil;");
    _builder.newLine();
    _builder.append("import org.eclipse.emf.ecore.EObject;");
    _builder.newLine();
    _builder.append("import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;");
    _builder.newLine();
    _builder.append("import org.eclipse.xtext.parser.antlr.XtextTokenStream;");
    _builder.newLine();
    _builder.append("import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;");
    _builder.newLine();
    _builder.append("import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;");
    _builder.newLine();
    _builder.append("import org.antlr.runtime.*;");
    _builder.newLine();
    _builder.append("import java.util.Stack;");
    _builder.newLine();
    _builder.append("import java.util.List;");
    _builder.newLine();
    _builder.append("import java.util.ArrayList;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class InternalMyDslParser extends AbstractInternalAntlrParser {");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public static final String[] tokenNames = new String[] {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("\"<invalid>\", \"<EOR>\", \"<DOWN>\", \"<UP>\", \"RULE_ID\", \"RULE_INT\", \"RULE_STRING\", \"RULE_ML_COMMENT\", \"RULE_SL_COMMENT\", \"RULE_WS\", \"RULE_ANY_OTHER\", \"\'Hello\'\", \"\'!\'\"");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("};");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// delegates");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// delegators");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public InternalMyDslParser(TokenStream input) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("this(input, new RecognizerSharedState());");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public InternalMyDslParser(TokenStream input, RecognizerSharedState state) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("super(input, state);");
    _builder.newLine();
    _builder.append("         ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("protected String getFirstRuleName() {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return \"Model\";");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("protected IGrammarAccess getGrammarAccess() {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return null;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public String[] getTokenNames() { return InternalMyDslParser.tokenNames; }");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// $ANTLR start \"ruleMySuperDuperObject\"");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public final EObject ruleMySuperDuperObject() throws RecognitionException {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("ruleMySuperDuperEnum();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return null;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// $ANTLR end \"ruleMySuperDuperObject\"");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// $ANTLR start \"ruleMySuperDuperEnum\"");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public final Enumerator ruleMySuperDuperEnum() throws RecognitionException {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return null;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// $ANTLR end \"ruleMySuperDuperEnum\"");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// $ANTLR start \"ruleSuperDuperFragment\"");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// InternalMyDsl.g:17296:1: ruleSuperDuperFragment[EObject in_current] returns [EObject current=in_current] : (otherlv_0= \'{\' ( ( (lv_parameters_1_0= ruleCallParameter ) ) otherlv_2= \';\' )* otherlv_3= \'}\' ) ;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public final EObject ruleSuperDuperFragment(EObject in_current) throws RecognitionException {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return null;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// $ANTLR end \"ruleSuperDuperFragment\"");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// Delegated rules");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("import org.eclipse.xtext.*;");
    _builder_1.newLine();
    _builder_1.append("import org.eclipse.xtext.parser.*;");
    _builder_1.newLine();
    _builder_1.append("import org.eclipse.xtext.parser.impl.*;");
    _builder_1.newLine();
    _builder_1.append("import org.eclipse.xtext.IGrammarAccess;");
    _builder_1.newLine();
    _builder_1.append("import org.eclipse.emf.common.util.Enumerator;");
    _builder_1.newLine();
    _builder_1.append("import org.eclipse.emf.ecore.util.EcoreUtil;");
    _builder_1.newLine();
    _builder_1.append("import org.eclipse.emf.ecore.EObject;");
    _builder_1.newLine();
    _builder_1.append("import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;");
    _builder_1.newLine();
    _builder_1.append("import org.eclipse.xtext.parser.antlr.XtextTokenStream;");
    _builder_1.newLine();
    _builder_1.append("import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;");
    _builder_1.newLine();
    _builder_1.append("import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;");
    _builder_1.newLine();
    _builder_1.append("import org.antlr.runtime.*;");
    _builder_1.newLine();
    _builder_1.append("import java.util.Stack;");
    _builder_1.newLine();
    _builder_1.append("import java.util.List;");
    _builder_1.newLine();
    _builder_1.append("import java.util.ArrayList;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("@SuppressWarnings(\"all\")");
    _builder_1.newLine();
    _builder_1.append("interface InternalMyDslParserSignatures {");
    _builder_1.newLine();
    _builder_1.append("     ");
    _builder_1.append("EObject ruleMySuperDuperObject() throws RecognitionException;");
    _builder_1.newLine();
    _builder_1.append("     ");
    _builder_1.append("Enumerator ruleMySuperDuperEnum() throws RecognitionException;");
    _builder_1.newLine();
    _builder_1.append("     ");
    _builder_1.append("EObject ruleSuperDuperFragment(EObject in_current) throws RecognitionException;");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("@SuppressWarnings(\"all\")");
    _builder_1.newLine();
    _builder_1.append("abstract class InternalMyDslParser1 extends AbstractInternalAntlrParser implements InternalMyDslParserSignatures {");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("InternalMyDslParser1(TokenStream input) {");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("this(input, new RecognizerSharedState());");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("InternalMyDslParser1(TokenStream input, RecognizerSharedState state) {");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("super(input, state);");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("public static final String[] tokenNames = new String[] {");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("\"<invalid>\", \"<EOR>\", \"<DOWN>\", \"<UP>\", \"RULE_ID\", \"RULE_INT\", \"RULE_STRING\", \"RULE_ML_COMMENT\", \"RULE_SL_COMMENT\", \"RULE_WS\", \"RULE_ANY_OTHER\", \"\'Hello\'\", \"\'!\'\"");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("};");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("public String[] getTokenNames() { return InternalMyDslParser.tokenNames; }");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("// Delegated rules");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("@SuppressWarnings(\"all\")");
    _builder_1.newLine();
    _builder_1.append("abstract class InternalMyDslParser2 extends InternalMyDslParser1 {");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("InternalMyDslParser2(TokenStream input) {");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("this(input, new RecognizerSharedState());");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("InternalMyDslParser2(TokenStream input, RecognizerSharedState state) {");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("super(input, state);");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("// $ANTLR start \"ruleMySuperDuperObject\"");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("public final EObject ruleMySuperDuperObject() throws RecognitionException {");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("ruleMySuperDuperEnum();");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("return null;");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("// $ANTLR end \"ruleMySuperDuperObject\"");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("@SuppressWarnings(\"all\")");
    _builder_1.newLine();
    _builder_1.append("abstract class InternalMyDslParser3 extends InternalMyDslParser2 {");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("InternalMyDslParser3(TokenStream input) {");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("this(input, new RecognizerSharedState());");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("InternalMyDslParser3(TokenStream input, RecognizerSharedState state) {");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("super(input, state);");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("// $ANTLR start \"ruleMySuperDuperEnum\"");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("public final Enumerator ruleMySuperDuperEnum() throws RecognitionException {");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("return null;");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("// $ANTLR end \"ruleMySuperDuperEnum\"");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("@SuppressWarnings(\"all\")");
    _builder_1.newLine();
    _builder_1.append("abstract class InternalMyDslParser4 extends InternalMyDslParser3 {");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("InternalMyDslParser4(TokenStream input) {");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("this(input, new RecognizerSharedState());");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("InternalMyDslParser4(TokenStream input, RecognizerSharedState state) {");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("super(input, state);");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("// $ANTLR start \"ruleSuperDuperFragment\"");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("// InternalMyDsl.g:17296:1: ruleSuperDuperFragment[EObject in_current] returns [EObject current=in_current] : (otherlv_0= \'{\' ( ( (lv_parameters_1_0= ruleCallParameter ) ) otherlv_2= \';\' )* otherlv_3= \'}\' ) ;");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("public final EObject ruleSuperDuperFragment(EObject in_current) throws RecognitionException {");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("return null;");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("// $ANTLR end \"ruleSuperDuperFragment\"");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("public class InternalMyDslParser extends InternalMyDslParser4 {");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("public InternalMyDslParser(TokenStream input) {");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("this(input, new RecognizerSharedState());");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("public InternalMyDslParser(TokenStream input, RecognizerSharedState state) {");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("super(input, state);");
    _builder_1.newLine();
    _builder_1.append("         ");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("@Override");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("protected String getFirstRuleName() {");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("return \"Model\";");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("@Override");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("protected IGrammarAccess getGrammarAccess() {");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("return null;");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    this.assertSplitsTo(1, _builder.toString(), _builder_1.toString());
  }
  
  protected void assertSplitsTo(final int methodsPerClass, final String from, final String to) {
    Assert.assertEquals(to, new PartialClassExtractor(from, methodsPerClass).transform());
  }
}
