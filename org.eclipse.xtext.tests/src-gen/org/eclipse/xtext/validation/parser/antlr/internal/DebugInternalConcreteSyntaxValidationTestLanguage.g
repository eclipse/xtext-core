/*
 * generated by Xtext
 */
grammar DebugInternalConcreteSyntaxValidationTestLanguage;

	






// Rule Model
ruleModel :
((
(
ruleSimpleGroup
)
)
    |(
(
ruleSimpleAlternative
)
)
    |(
(
ruleSimpleMultiplicities
)
)
    |(
(
ruleGroupMultiplicities
)
)
    |(
(
ruleAlternativeMultiplicities
)
)
    |(
(
ruleAssignedAction
)
)
    |(
(
ruleAssignedActionSecond
)
)
    |(
(
ruleUnassignedAction1
)
)
    |(
(
ruleUnassignedAction2
)
)
    |(
(
ruleUnassignedAction3
)
)
    |(
(
ruleUnassignedRuleCall1
)
)
    |(
(
ruleUnassignedRuleCall2
)
)
    |(
(
ruleCombination1
)
)
    |(
(
ruleCombination2
)
)
    |(
(
ruleCombination3
)
)
    |(
(
ruleCombination4
)
)
    |(
(
ruleList1
)
)
    |(
(
ruleList2
)
)
    |(
(
ruleList3
)
)
    |(
(
ruleList4
)
)
    |(
(
ruleList5
)
)
    |(
(
ruleAltList1
)
)
    |(
(
ruleAltList2
)
)
    |(
(
ruleTransientObject
)
)
    |(
(
ruleTransientSerializeables1
)
)
    |(
(
ruleStaticSimplification
)
)
    |(
(
ruleTwoVersion
)
)
    |(
(
ruleHeuristic1
)
))
;






// Rule SimpleGroup
ruleSimpleGroup :
(	'#1' 
(
(
RULE_ID

)
)(
(
RULE_ID

)
))
;






// Rule SimpleAlternative
ruleSimpleAlternative :
(	'#2' 
((	'kw1' 
(
(
RULE_ID

)
))
    |(	'kw2' 
(
(
RULE_ID

)
))))
;






// Rule SimpleMultiplicities
ruleSimpleMultiplicities :
(	'#3' 
(
(
RULE_ID

)
)	'kw1' 
(
(
RULE_ID

)
)?	'kw2' 
(
(
RULE_ID

)
)+	'kw3' 
(
(
RULE_ID

)
)*)
;






// Rule GroupMultiplicities
ruleGroupMultiplicities :
(	'#4' 
(
(
RULE_ID

)
)	'kw1' 
((
(
RULE_ID

)
)(
(
RULE_ID

)
))?	'kw2' 
((
(
RULE_ID

)
)(
(
RULE_ID

)
))+	'kw3' 
((
(
RULE_ID

)
)(
(
RULE_ID

)
))*)
;






// Rule AlternativeMultiplicities
ruleAlternativeMultiplicities :
(	'#5' 
((
(
RULE_ID

)
)
    |(	'kw1' 
(
(
RULE_ID

)
)))?	'kw2' 
((
(
RULE_ID

)
)
    |(	'kw3' 
(
(
RULE_ID

)
)))+	'kw4' 
((
(
RULE_ID

)
)
    |(	'kw5' 
(
(
RULE_ID

)
)))*)
;






// Rule AssignedAction
ruleAssignedAction :
(	'#6' 
(
(
RULE_ID

)
)((
)(
(
RULE_ID

)
))+)
;






// Rule AssignedActionSecond
ruleAssignedActionSecond :
(	'#7' 
(
(
RULE_ID

)
)	'kw1' 
(
(
RULE_ID

)
))
;






// Rule UnassignedAction1
ruleUnassignedAction1 :
((
)	'#8' 
(
(
RULE_ID

)
)(
(
RULE_ID

)
)?)
;






// Rule UnassignedAction2
ruleUnassignedAction2 :
((
)	'#9' 
(
(
RULE_ID

)
)(
(
RULE_ID

)
)?)
;






// Rule UnassignedAction3
ruleUnassignedAction3 :
(	'#10' 
((	'kw1' 
(
))
    |(	'kw2' 
(
)))(
(
RULE_ID

)
)(
(
RULE_ID

)
)?)
;






// Rule UnassignedRuleCall1
ruleUnassignedRuleCall1 :
(	'#11' 
	ruleUnassignedRuleCall1Sub(
(
RULE_ID

)
))
;






// Rule UnassignedRuleCall1Sub
ruleUnassignedRuleCall1Sub :
(
(
RULE_ID

)
)
;






// Rule UnassignedRuleCall2
ruleUnassignedRuleCall2 :
(	'#12' 
	ruleUnassignedRuleCall2Sub(
(
RULE_ID

)
))
;






// Rule UnassignedRuleCall2Sub
ruleUnassignedRuleCall2Sub :
(
)
;






// Rule Combination1
ruleCombination1 :
(	'#13' 
(
(
RULE_ID

)
)(	'kw1' 
(
(
RULE_ID

)
)((	'kw2' 
(
(
RULE_ID

)
))
    |(
(
RULE_ID

)
)))?)
;






// Rule Combination2
ruleCombination2 :
(	'#14' 
(
(
RULE_ID

)
)((	'kw1' 
(
(
RULE_ID

)
))
    |((
(
RULE_ID

)
)(
(
RULE_ID

)
))*))
;






// Rule Combination3
ruleCombination3 :
(	'#15' 
((
(
RULE_ID

)
)
    |(
(
RULE_INT

)
)
    |(
(
RULE_STRING

)
))*)
;






// Rule Combination4
ruleCombination4 :
(	'#16' 
(	'group' 
(
(
RULE_ID

)
)(
(
RULE_ID

)
)(
(
RULE_ID

)
))+)
;






// Rule List1
ruleList1 :
(	'#17' 
(
(
RULE_ID

)
)(	',' 
(
(
RULE_ID

)
))*)
;






// Rule List2
ruleList2 :
(	'#18' 
((
(
RULE_ID

)
)(	',' 
(
(
RULE_ID

)
))*)?)
;






// Rule List3
ruleList3 :
((	'#19' 
((
(
RULE_ID

)
)(	',' 
(
(
RULE_ID

)
))*))
    |(	'kw3' 
(
(
RULE_ID

)
)))
;






// Rule List4
ruleList4 :
(	'#20' 
(
(
RULE_ID

)
)(	',' 
(
(
RULE_ID

)
))*	'kw3' 
(
(
RULE_ID

)
))
;






// Rule List5
ruleList5 :
(	'#21' 
(((
(
RULE_ID

)
)(	',' 
(
(
RULE_ID

)
))*	'kw3' 
(
(
RULE_ID

)
))
    |(
(
RULE_ID

)
)))
;






// Rule AltList1
ruleAltList1 :
(	'#22' 
(((
(
RULE_ID

)
)(
(
RULE_ID

)
))
    |(	'kw1' 
(
(
RULE_ID

)
)(
(
RULE_ID

)
))
    |(	'kw2' 
(
(
RULE_ID

)
)(
(
RULE_ID

)
)?)))
;






// Rule AltList2
ruleAltList2 :
(	'#23' 
(((
(
RULE_ID

)
)(
(
RULE_ID

)
))
    |(	'kw' 
(
(
RULE_ID

)
)(	',' 
(
(
RULE_ID

)
))*(
(
RULE_ID

)
))))
;






// Rule TransientObject
ruleTransientObject :
(	'#24' 
((
(
RULE_ID

)
)(
(
ruleTransientObjectSub
)
))?)
;






// Rule TransientObjectSub
ruleTransientObjectSub :
((
(
RULE_ID

)
)(
(
RULE_ID

)
))
;






// Rule TransientSerializeables1
ruleTransientSerializeables1 :
(	'#25' 
((
(
RULE_ID

)
)(
(
ruleTransientSerializeables1Enum
)
))?((
(
RULE_ID

)
)(
(
RULE_INT

)
))?)
;






// Rule StaticSimplification
ruleStaticSimplification :
(	'#26' 
(	'kw1' 

    |(
)
    |(
(
RULE_ID

)
))(	'kw2' 

    |(
(
RULE_ID

)
))(	'kw3' 
(	'kw4' 
(
(
RULE_ID

)
)+)?))
;






// Rule TwoVersion
ruleTwoVersion :
(	'#27' 
(	ruleTwoVersionNo1
    |	ruleTwoVersionNo2))
;






// Rule TwoVersionNo1
ruleTwoVersionNo1 :
((
(
RULE_ID

)
)?(
(
RULE_ID

)
)	'short' 
((
(
RULE_ID

)
)(
(
RULE_ID

)
)*)?	'one' 
(
(
RULE_ID

)
)?)
;






// Rule TwoVersionNo2
ruleTwoVersionNo2 :
((
(
RULE_ID

)
)?(
(
RULE_ID

)
)	'long' 
((
(
RULE_ID

)
)(
(
RULE_ID

)
)*)?	'extra' 
(
(
RULE_ID

)
)?(((
(
RULE_ID

)
)(
(
RULE_ID

)
))
    |(	'two' 
(
(
RULE_ID

)
)))?)
;






// Rule Heuristic1
ruleHeuristic1 :
(	'#28' 
(	'kw1' 
(
(
RULE_ID

)
)(
(
RULE_ID

)
))*(	'kw2' 
(
(
RULE_ID

)
)(
(
RULE_ID

)
))*(	'kw3' 
(
(
RULE_ID

)
)(
(
RULE_ID

)
))*)
;





// Rule TransientSerializeables1Enum
ruleTransientSerializeables1Enum :
((	'lit1' 
)
    |(	'lit2' 
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/' {skip();};

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')? {skip();};

RULE_WS : (' '|'\t'|'\r'|'\n')+ {skip();};

RULE_ANY_OTHER : .;


