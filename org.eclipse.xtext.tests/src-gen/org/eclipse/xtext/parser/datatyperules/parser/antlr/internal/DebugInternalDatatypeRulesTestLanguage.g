/*
 * generated by Xtext
 */
grammar DebugInternalDatatypeRulesTestLanguage ;

// Rule CompositeModel
ruleCompositeModel :
	ruleModel+
;

// Rule Model
ruleModel :
	ruleNestedModelId (
		':' ruleFraction
	)? (
		'#' ruleVector
	)? (
		'+' ruleDots
	)? (
		'*' ruleDouble
	)? ';'
;

// Rule ModelId
ruleModelId :
	RULE_ID '.' RULE_ID
;

// Rule NestedModelId
ruleNestedModelId :
	ruleModelId '.' ruleModelId
;

// Rule Fraction
ruleFraction :
	RULE_INT (
		'/' RULE_INT
	)?
;

// Rule Vector
ruleVector :
	'(' RULE_INT RULE_INT ')'
;

// Rule Dots
ruleDots :
	'.' '.' |
	'..'
;

// Rule Double
ruleDouble :
	'-'? RULE_INT? '.' RULE_INT (
		'E' '-'? RULE_INT
	)?
;

RULE_ID :
	'^'? (
		'a' .. 'z' |
		'A' .. 'Z' |
		'_'
	) (
		'a' .. 'z' |
		'A' .. 'Z' |
		'_' |
		'0' .. '9'
	)*
;

RULE_INT :
	'0' .. '9'+
;

RULE_STRING :
	'"' (
		'\\' . |
		~ (
			'\\' |
			'"'
		)
	)* '"' |
	'\'' (
		'\\' . |
		~ (
			'\\' |
			'\''
		)
	)* '\''
;

RULE_ML_COMMENT :
	'/*' (
		options { greedy = false ; } : .
	)* '*/' { skip(); }
;

RULE_SL_COMMENT :
	'//' ~ (
		'\n' |
		'\r'
	)* (
		'\r'? '\n'
	)? { skip(); }
;

RULE_WS :
	(
		' ' |
		'\t' |
		'\r' |
		'\n'
	)+ { skip(); }
;

RULE_ANY_OTHER :
	.
;