/*
 * generated by Xtext
 */
package org.eclipse.xtext.parsetree.reconstr.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;

import org.eclipse.xtext.parsetree.reconstr.services.SimpleReconstrTestLanguageGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class SimpleReconstrTestLanguageParsetreeConstructor extends org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor {
		
	@Inject
	private SimpleReconstrTestLanguageGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Op_Group(this, this, 0, inst);
			case 1: return new Term_Alternatives(this, this, 1, inst);
			case 2: return new Atom_NameAssignment(this, this, 2, inst);
			case 3: return new Parens_Group(this, this, 3, inst);
			case 4: return new TwoNumbers_Group(this, this, 4, inst);
			case 5: return new ManyStrings_Group(this, this, 5, inst);
			case 6: return new Type_Group(this, this, 6, inst);
			case 7: return new Ref2_Group(this, this, 7, inst);
			case 8: return new Spare_Group(this, this, 8, inst);
			case 9: return new Boolean_Group(this, this, 9, inst);
			case 10: return new Transient1_Group(this, this, 10, inst);
			case 11: return new Consumed1_Group(this, this, 11, inst);
			case 12: return new Consumed2_Group(this, this, 12, inst);
			case 13: return new Loop1_Group(this, this, 13, inst);
			case 14: return new Loop2_Group(this, this, 14, inst);
			case 15: return new Loop3_Group(this, this, 15, inst);
			case 16: return new Loop4_Group(this, this, 16, inst);
			case 17: return new LoopBug285452_Group(this, this, 17, inst);
			case 18: return new DuplicateBug284491_Group(this, this, 18, inst);
			case 19: return new EmptyObjectBug284850_Group(this, this, 19, inst);
			case 20: return new EmptyObjectItems_ListAssignment(this, this, 20, inst);
			case 21: return new EmptyObjectItem_Group(this, this, 21, inst);
			case 22: return new MultiInheritanceBug280439_Group(this, this, 22, inst);
			case 23: return new AbstractMulti1_Alternatives(this, this, 23, inst);
			case 24: return new AbstractMulti2_Alternatives(this, this, 24, inst);
			case 25: return new ConcreteMulti_Group(this, this, 25, inst);
			case 26: return new EObjectRef_Group(this, this, 26, inst);
			case 27: return new EObjectElement_NameAssignment(this, this, 27, inst);
			case 28: return new TypeBug305577_1_Group(this, this, 28, inst);
			case 29: return new TypeBug305577_2_Group(this, this, 29, inst);
			case 30: return new TypeBug1AInh_TypeBug1BParserRuleCall(this, this, 30, inst);
			case 31: return new TypeBug1A_Group(this, this, 31, inst);
			case 32: return new TypeBug1B_Group(this, this, 32, inst);
			case 33: return new TypeBug2AInh_TypeBug2BParserRuleCall(this, this, 33, inst);
			case 34: return new TypeBug2A_Group(this, this, 34, inst);
			case 35: return new TypeBug2B_Group(this, this, 35, inst);
			case 36: return new Bug305171_Group(this, this, 36, inst);
			case 37: return new Bug310435Enum_Group(this, this, 37, inst);
			case 38: return new Bug310435Val_Group(this, this, 38, inst);
			case 39: return new CrossRefNameTest_Group(this, this, 39, inst);
			case 40: return new CrossRefNamed_NameAssignment(this, this, 40, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule Op ****************
 *
 * Op Expression:
 * 	Term ({Op.values+=current} values+=Term)*
 *
 **/

// Term ({Op.values+=current} values+=Term)*
protected class Op_Group extends GroupToken {
	
	public Op_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Op_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Op_TermParserRuleCall_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAtomRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBooleanRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBug305171Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBug310435EnumRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBug310435ValRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getConsumed1Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getConsumed2Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getCrossRefNameTestRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDuplicateBug284491Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEObjectRefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEmptyObjectBug284850Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoop1Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoop2Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoop3Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoop4Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoopBug285452Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getManyStringsRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMultiInheritanceBug280439Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getOpAccess().getOpValuesAction_1_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getRef2Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSpareRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTransient1Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTwoNumbersRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug1AAccess().getTypeBug1AAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug1BAccess().getTypeBug1BAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug2AAccess().getTypeBug2AAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug2BAccess().getTypeBug2BAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// Term
protected class Op_TermParserRuleCall_0 extends RuleCallToken {
	
	public Op_TermParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getOpAccess().getTermParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Term_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(Term_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ({Op.values+=current} values+=Term)*
protected class Op_Group_1 extends GroupToken {
	
	public Op_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOpAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Op_ValuesAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getOpAccess().getOpValuesAction_1_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Op.values+=current}
protected class Op_OpValuesAction_1_0 extends ActionToken  {

	public Op_OpValuesAction_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getOpAccess().getOpValuesAction_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Op_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Op_TermParserRuleCall_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		Object val = eObjectConsumer.getConsumable("values", false);
		if(val == null) return null;
		if(!eObjectConsumer.isConsumedWithLastConsumtion("values")) return null;
		return createEObjectConsumer((EObject) val);
	}
}

// values+=Term
protected class Op_ValuesAssignment_1_1 extends AssignmentToken  {
	
	public Op_ValuesAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOpAccess().getValuesAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Term_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("values",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("values");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTermRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOpAccess().getValuesTermParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Op_OpValuesAction_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule Op ****************/


/************ begin Rule Term ****************
 *
 * Term Expression:
 * 	Atom | TwoNumbers | ManyStrings | Type | Ref2 | Spare | Boolean | Transient1 | Consumed1 | Consumed2 | Loop1 | Loop2 |
 * 	Loop3 | Loop4 | LoopBug285452 | DuplicateBug284491 | EmptyObjectBug284850 | MultiInheritanceBug280439 | EObjectRef |
 * 	TypeBug305577_1 | TypeBug305577_2 | Parens | Bug305171 | Bug310435Val | Bug310435Enum | CrossRefNameTest
 *
 **/

// Atom | TwoNumbers | ManyStrings | Type | Ref2 | Spare | Boolean | Transient1 | Consumed1 | Consumed2 | Loop1 | Loop2 |
// Loop3 | Loop4 | LoopBug285452 | DuplicateBug284491 | EmptyObjectBug284850 | MultiInheritanceBug280439 | EObjectRef |
// TypeBug305577_1 | TypeBug305577_2 | Parens | Bug305171 | Bug310435Val | Bug310435Enum | CrossRefNameTest
protected class Term_Alternatives extends AlternativesToken {

	public Term_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getTermAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Term_AtomParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Term_TwoNumbersParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Term_ManyStringsParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Term_TypeParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Term_Ref2ParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Term_SpareParserRuleCall_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Term_BooleanParserRuleCall_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Term_Transient1ParserRuleCall_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Term_Consumed1ParserRuleCall_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new Term_Consumed2ParserRuleCall_9(lastRuleCallOrigin, this, 9, inst);
			case 10: return new Term_Loop1ParserRuleCall_10(lastRuleCallOrigin, this, 10, inst);
			case 11: return new Term_Loop2ParserRuleCall_11(lastRuleCallOrigin, this, 11, inst);
			case 12: return new Term_Loop3ParserRuleCall_12(lastRuleCallOrigin, this, 12, inst);
			case 13: return new Term_Loop4ParserRuleCall_13(lastRuleCallOrigin, this, 13, inst);
			case 14: return new Term_LoopBug285452ParserRuleCall_14(lastRuleCallOrigin, this, 14, inst);
			case 15: return new Term_DuplicateBug284491ParserRuleCall_15(lastRuleCallOrigin, this, 15, inst);
			case 16: return new Term_EmptyObjectBug284850ParserRuleCall_16(lastRuleCallOrigin, this, 16, inst);
			case 17: return new Term_MultiInheritanceBug280439ParserRuleCall_17(lastRuleCallOrigin, this, 17, inst);
			case 18: return new Term_EObjectRefParserRuleCall_18(lastRuleCallOrigin, this, 18, inst);
			case 19: return new Term_TypeBug305577_1ParserRuleCall_19(lastRuleCallOrigin, this, 19, inst);
			case 20: return new Term_TypeBug305577_2ParserRuleCall_20(lastRuleCallOrigin, this, 20, inst);
			case 21: return new Term_ParensParserRuleCall_21(lastRuleCallOrigin, this, 21, inst);
			case 22: return new Term_Bug305171ParserRuleCall_22(lastRuleCallOrigin, this, 22, inst);
			case 23: return new Term_Bug310435ValParserRuleCall_23(lastRuleCallOrigin, this, 23, inst);
			case 24: return new Term_Bug310435EnumParserRuleCall_24(lastRuleCallOrigin, this, 24, inst);
			case 25: return new Term_CrossRefNameTestParserRuleCall_25(lastRuleCallOrigin, this, 25, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAtomRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBooleanRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBug305171Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBug310435EnumRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBug310435ValRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getConsumed1Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getConsumed2Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getCrossRefNameTestRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDuplicateBug284491Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEObjectRefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEmptyObjectBug284850Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoop1Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoop2Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoop3Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoop4Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoopBug285452Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getManyStringsRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMultiInheritanceBug280439Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getOpAccess().getOpValuesAction_1_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getRef2Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSpareRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTransient1Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTwoNumbersRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug1AAccess().getTypeBug1AAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug1BAccess().getTypeBug1BAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug2AAccess().getTypeBug2AAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug2BAccess().getTypeBug2BAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// Atom
protected class Term_AtomParserRuleCall_0 extends RuleCallToken {
	
	public Term_AtomParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getAtomParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Atom_NameAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAtomRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Atom_NameAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// TwoNumbers
protected class Term_TwoNumbersParserRuleCall_1 extends RuleCallToken {
	
	public Term_TwoNumbersParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getTwoNumbersParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TwoNumbers_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTwoNumbersRule().getType().getClassifier())
			return null;
		if(checkForRecursion(TwoNumbers_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ManyStrings
protected class Term_ManyStringsParserRuleCall_2 extends RuleCallToken {
	
	public Term_ManyStringsParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getManyStringsParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ManyStrings_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getManyStringsRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ManyStrings_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Type
protected class Term_TypeParserRuleCall_3 extends RuleCallToken {
	
	public Term_TypeParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getTypeParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Type_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Type_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Ref2
protected class Term_Ref2ParserRuleCall_4 extends RuleCallToken {
	
	public Term_Ref2ParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getRef2ParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Ref2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRef2Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(Ref2_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Spare
protected class Term_SpareParserRuleCall_5 extends RuleCallToken {
	
	public Term_SpareParserRuleCall_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getSpareParserRuleCall_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spare_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSpareRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Spare_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Boolean
protected class Term_BooleanParserRuleCall_6 extends RuleCallToken {
	
	public Term_BooleanParserRuleCall_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getBooleanParserRuleCall_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Boolean_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBooleanRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Boolean_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Transient1
protected class Term_Transient1ParserRuleCall_7 extends RuleCallToken {
	
	public Term_Transient1ParserRuleCall_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getTransient1ParserRuleCall_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Transient1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTransient1Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(Transient1_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Consumed1
protected class Term_Consumed1ParserRuleCall_8 extends RuleCallToken {
	
	public Term_Consumed1ParserRuleCall_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getConsumed1ParserRuleCall_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Consumed1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getConsumed1Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(Consumed1_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Consumed2
protected class Term_Consumed2ParserRuleCall_9 extends RuleCallToken {
	
	public Term_Consumed2ParserRuleCall_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getConsumed2ParserRuleCall_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Consumed2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getConsumed2Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(Consumed2_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Loop1
protected class Term_Loop1ParserRuleCall_10 extends RuleCallToken {
	
	public Term_Loop1ParserRuleCall_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getLoop1ParserRuleCall_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLoop1Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(Loop1_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Loop2
protected class Term_Loop2ParserRuleCall_11 extends RuleCallToken {
	
	public Term_Loop2ParserRuleCall_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getLoop2ParserRuleCall_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLoop2Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(Loop2_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Loop3
protected class Term_Loop3ParserRuleCall_12 extends RuleCallToken {
	
	public Term_Loop3ParserRuleCall_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getLoop3ParserRuleCall_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop3_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLoop3Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(Loop3_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Loop4
protected class Term_Loop4ParserRuleCall_13 extends RuleCallToken {
	
	public Term_Loop4ParserRuleCall_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getLoop4ParserRuleCall_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop4_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLoop4Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(Loop4_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// LoopBug285452
protected class Term_LoopBug285452ParserRuleCall_14 extends RuleCallToken {
	
	public Term_LoopBug285452ParserRuleCall_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getLoopBug285452ParserRuleCall_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LoopBug285452_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLoopBug285452Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(LoopBug285452_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// DuplicateBug284491
protected class Term_DuplicateBug284491ParserRuleCall_15 extends RuleCallToken {
	
	public Term_DuplicateBug284491ParserRuleCall_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getDuplicateBug284491ParserRuleCall_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DuplicateBug284491_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDuplicateBug284491Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(DuplicateBug284491_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// EmptyObjectBug284850
protected class Term_EmptyObjectBug284850ParserRuleCall_16 extends RuleCallToken {
	
	public Term_EmptyObjectBug284850ParserRuleCall_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getEmptyObjectBug284850ParserRuleCall_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmptyObjectBug284850_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEmptyObjectBug284850Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(EmptyObjectBug284850_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// MultiInheritanceBug280439
protected class Term_MultiInheritanceBug280439ParserRuleCall_17 extends RuleCallToken {
	
	public Term_MultiInheritanceBug280439ParserRuleCall_17(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getMultiInheritanceBug280439ParserRuleCall_17();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiInheritanceBug280439_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMultiInheritanceBug280439Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(MultiInheritanceBug280439_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// EObjectRef
protected class Term_EObjectRefParserRuleCall_18 extends RuleCallToken {
	
	public Term_EObjectRefParserRuleCall_18(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getEObjectRefParserRuleCall_18();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EObjectRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEObjectRefRule().getType().getClassifier())
			return null;
		if(checkForRecursion(EObjectRef_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// TypeBug305577_1
protected class Term_TypeBug305577_1ParserRuleCall_19 extends RuleCallToken {
	
	public Term_TypeBug305577_1ParserRuleCall_19(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getTypeBug305577_1ParserRuleCall_19();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug305577_1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeBug1AAccess().getTypeBug1AAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug1BAccess().getTypeBug1BAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(TypeBug305577_1_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// TypeBug305577_2
protected class Term_TypeBug305577_2ParserRuleCall_20 extends RuleCallToken {
	
	public Term_TypeBug305577_2ParserRuleCall_20(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getTypeBug305577_2ParserRuleCall_20();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug305577_2_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeBug2AAccess().getTypeBug2AAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug2BAccess().getTypeBug2BAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(TypeBug305577_2_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Parens
protected class Term_ParensParserRuleCall_21 extends RuleCallToken {
	
	public Term_ParensParserRuleCall_21(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getParensParserRuleCall_21();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parens_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(Parens_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Bug305171
protected class Term_Bug305171ParserRuleCall_22 extends RuleCallToken {
	
	public Term_Bug305171ParserRuleCall_22(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getBug305171ParserRuleCall_22();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBug305171Rule().getType().getClassifier())
			return null;
		if(checkForRecursion(Bug305171_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Bug310435Val
protected class Term_Bug310435ValParserRuleCall_23 extends RuleCallToken {
	
	public Term_Bug310435ValParserRuleCall_23(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getBug310435ValParserRuleCall_23();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Val_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBug310435ValRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Bug310435Val_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Bug310435Enum
protected class Term_Bug310435EnumParserRuleCall_24 extends RuleCallToken {
	
	public Term_Bug310435EnumParserRuleCall_24(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getBug310435EnumParserRuleCall_24();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Enum_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBug310435EnumRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Bug310435Enum_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// CrossRefNameTest
protected class Term_CrossRefNameTestParserRuleCall_25 extends RuleCallToken {
	
	public Term_CrossRefNameTestParserRuleCall_25(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTermAccess().getCrossRefNameTestParserRuleCall_25();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CrossRefNameTest_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCrossRefNameTestRule().getType().getClassifier())
			return null;
		if(checkForRecursion(CrossRefNameTest_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Term ****************/


/************ begin Rule Atom ****************
 *
 * Atom:
 * 	name=ID;
 *
 **/

// name=ID
protected class Atom_NameAssignment extends AssignmentToken  {
	
	public Atom_NameAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAtomAccess().getNameAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAtomRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAtomAccess().getNameIDTerminalRuleCall_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAtomAccess().getNameIDTerminalRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule Atom ****************/


/************ begin Rule Parens ****************
 *
 * / * SuppressWarnings[potentialOverride] * / Parens Expression:
 * 	'(' Op ')' em='!'?
 *
 **/

// '(' Op ')' em='!'?
protected class Parens_Group extends GroupToken {
	
	public Parens_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParensAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parens_EmAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Parens_RightParenthesisKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAtomRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBooleanRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBug305171Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBug310435EnumRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBug310435ValRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getConsumed1Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getConsumed2Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getCrossRefNameTestRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDuplicateBug284491Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEObjectRefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEmptyObjectBug284850Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoop1Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoop2Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoop3Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoop4Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoopBug285452Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getManyStringsRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMultiInheritanceBug280439Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getOpAccess().getOpValuesAction_1_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getRef2Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSpareRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTransient1Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTwoNumbersRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug1AAccess().getTypeBug1AAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug1BAccess().getTypeBug1BAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug2AAccess().getTypeBug2AAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug2BAccess().getTypeBug2BAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '('
protected class Parens_LeftParenthesisKeyword_0 extends KeywordToken  {
	
	public Parens_LeftParenthesisKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParensAccess().getLeftParenthesisKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// Op
protected class Parens_OpParserRuleCall_1 extends RuleCallToken {
	
	public Parens_OpParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParensAccess().getOpParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Op_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(Op_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parens_LeftParenthesisKeyword_0(lastRuleCallOrigin, next, actIndex, inst);
			default: return null;
		}	
	}	
}

// ')'
protected class Parens_RightParenthesisKeyword_2 extends KeywordToken  {
	
	public Parens_RightParenthesisKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getParensAccess().getRightParenthesisKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parens_OpParserRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// em='!'?
protected class Parens_EmAssignment_3 extends AssignmentToken  {
	
	public Parens_EmAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParensAccess().getEmAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Parens_RightParenthesisKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("em",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("em");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getParensAccess().getEmExclamationMarkKeyword_3_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getParensAccess().getEmExclamationMarkKeyword_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Parens ****************/


/************ begin Rule TwoNumbers ****************
 *
 * TwoNumbers:
 * 	num1=INT num2=INT ('#' num3+=INT)*;
 *
 **/

// num1=INT num2=INT ('#' num3+=INT)*
protected class TwoNumbers_Group extends GroupToken {
	
	public TwoNumbers_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTwoNumbersAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TwoNumbers_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TwoNumbers_Num2Assignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTwoNumbersRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// num1=INT
protected class TwoNumbers_Num1Assignment_0 extends AssignmentToken  {
	
	public TwoNumbers_Num1Assignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTwoNumbersAccess().getNum1Assignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("num1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("num1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTwoNumbersAccess().getNum1INTTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTwoNumbersAccess().getNum1INTTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// num2=INT
protected class TwoNumbers_Num2Assignment_1 extends AssignmentToken  {
	
	public TwoNumbers_Num2Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTwoNumbersAccess().getNum2Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TwoNumbers_Num1Assignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("num2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("num2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTwoNumbersAccess().getNum2INTTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTwoNumbersAccess().getNum2INTTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ('#' num3+=INT)*
protected class TwoNumbers_Group_2 extends GroupToken {
	
	public TwoNumbers_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTwoNumbersAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TwoNumbers_Num3Assignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// '#'
protected class TwoNumbers_NumberSignKeyword_2_0 extends KeywordToken  {
	
	public TwoNumbers_NumberSignKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTwoNumbersAccess().getNumberSignKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TwoNumbers_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TwoNumbers_Num2Assignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// num3+=INT
protected class TwoNumbers_Num3Assignment_2_1 extends AssignmentToken  {
	
	public TwoNumbers_Num3Assignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTwoNumbersAccess().getNum3Assignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TwoNumbers_NumberSignKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("num3",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("num3");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTwoNumbersAccess().getNum3INTTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTwoNumbersAccess().getNum3INTTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule TwoNumbers ****************/


/************ begin Rule ManyStrings ****************
 *
 * ManyStrings:
 * 	'=' str1+=STRING* str2+=STRING;
 *
 **/

// '=' str1+=STRING* str2+=STRING
protected class ManyStrings_Group extends GroupToken {
	
	public ManyStrings_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getManyStringsAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ManyStrings_Str2Assignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getManyStringsRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '='
protected class ManyStrings_EqualsSignKeyword_0 extends KeywordToken  {
	
	public ManyStrings_EqualsSignKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getManyStringsAccess().getEqualsSignKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// str1+=STRING*
protected class ManyStrings_Str1Assignment_1 extends AssignmentToken  {
	
	public ManyStrings_Str1Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getManyStringsAccess().getStr1Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ManyStrings_Str1Assignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ManyStrings_EqualsSignKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("str1",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("str1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getManyStringsAccess().getStr1STRINGTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getManyStringsAccess().getStr1STRINGTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// str2+=STRING
protected class ManyStrings_Str2Assignment_2 extends AssignmentToken  {
	
	public ManyStrings_Str2Assignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getManyStringsAccess().getStr2Assignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ManyStrings_Str1Assignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ManyStrings_EqualsSignKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("str2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("str2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getManyStringsAccess().getStr2STRINGTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getManyStringsAccess().getStr2STRINGTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule ManyStrings ****************/


/************ begin Rule Type ****************
 *
 * Type:
 * 	'type' name=ID 'extends' ^extends=[Type];
 *
 **/

// 'type' name=ID 'extends' ^extends=[Type]
protected class Type_Group extends GroupToken {
	
	public Type_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Type_ExtendsAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// 'type'
protected class Type_TypeKeyword_0 extends KeywordToken  {
	
	public Type_TypeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTypeAccess().getTypeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class Type_NameAssignment_1 extends AssignmentToken  {
	
	public Type_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTypeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Type_TypeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// 'extends'
protected class Type_ExtendsKeyword_2 extends KeywordToken  {
	
	public Type_ExtendsKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTypeAccess().getExtendsKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Type_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ^extends=[Type]
protected class Type_ExtendsAssignment_3 extends AssignmentToken  {
	
	public Type_ExtendsAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTypeAccess().getExtendsAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Type_ExtendsKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("extends",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("extends");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeAccess().getExtendsTypeCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getTypeAccess().getExtendsTypeCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule Type ****************/


/************ begin Rule Ref2 ****************
 *
 * Ref2:
 * 	'#2' ref2=('mykeyword1' | STRING | 'mykeyword2');
 *
 **/

// '#2' ref2=('mykeyword1' | STRING | 'mykeyword2')
protected class Ref2_Group extends GroupToken {
	
	public Ref2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRef2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Ref2_Ref2Assignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRef2Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '#2'
protected class Ref2_NumberSignDigitTwoKeyword_0 extends KeywordToken  {
	
	public Ref2_NumberSignDigitTwoKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRef2Access().getNumberSignDigitTwoKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ref2=('mykeyword1' | STRING | 'mykeyword2')
protected class Ref2_Ref2Assignment_1 extends AssignmentToken  {
	
	public Ref2_Ref2Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRef2Access().getRef2Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Ref2_NumberSignDigitTwoKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref2");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getRef2Access().getRef2Mykeyword1Keyword_1_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getRef2Access().getRef2Mykeyword1Keyword_1_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getRef2Access().getRef2Mykeyword2Keyword_1_0_2(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getRef2Access().getRef2Mykeyword2Keyword_1_0_2();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRef2Access().getRef2STRINGTerminalRuleCall_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRef2Access().getRef2STRINGTerminalRuleCall_1_0_1();
			return obj;
		}
		return null;
	}

}


/************ end Rule Ref2 ****************/


/************ begin Rule Spare ****************
 *
 * Spare:
 * 	'#3' id+=ID ('.' id+=ID)*;
 *
 **/

// '#3' id+=ID ('.' id+=ID)*
protected class Spare_Group extends GroupToken {
	
	public Spare_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpareAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spare_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Spare_IdAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSpareRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '#3'
protected class Spare_NumberSignDigitThreeKeyword_0 extends KeywordToken  {
	
	public Spare_NumberSignDigitThreeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpareAccess().getNumberSignDigitThreeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// id+=ID
protected class Spare_IdAssignment_1 extends AssignmentToken  {
	
	public Spare_IdAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpareAccess().getIdAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spare_NumberSignDigitThreeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSpareAccess().getIdIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSpareAccess().getIdIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ('.' id+=ID)*
protected class Spare_Group_2 extends GroupToken {
	
	public Spare_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpareAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spare_IdAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// '.'
protected class Spare_FullStopKeyword_2_0 extends KeywordToken  {
	
	public Spare_FullStopKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpareAccess().getFullStopKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spare_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Spare_IdAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// id+=ID
protected class Spare_IdAssignment_2_1 extends AssignmentToken  {
	
	public Spare_IdAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpareAccess().getIdAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spare_FullStopKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSpareAccess().getIdIDTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSpareAccess().getIdIDTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule Spare ****************/


/************ begin Rule Boolean ****************
 *
 * Boolean:
 * 	'#4' bool?='myoption'? 'kw' value=ID;
 *
 **/

// '#4' bool?='myoption'? 'kw' value=ID
protected class Boolean_Group extends GroupToken {
	
	public Boolean_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBooleanAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Boolean_ValueAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBooleanRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '#4'
protected class Boolean_NumberSignDigitFourKeyword_0 extends KeywordToken  {
	
	public Boolean_NumberSignDigitFourKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBooleanAccess().getNumberSignDigitFourKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// bool?='myoption'?
protected class Boolean_BoolAssignment_1 extends AssignmentToken  {
	
	public Boolean_BoolAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBooleanAccess().getBoolAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Boolean_NumberSignDigitFourKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bool",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bool");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBooleanAccess().getBoolMyoptionKeyword_1_0();
			return obj;
		}
		return null;
	}

}

// 'kw'
protected class Boolean_KwKeyword_2 extends KeywordToken  {
	
	public Boolean_KwKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBooleanAccess().getKwKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Boolean_BoolAssignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Boolean_NumberSignDigitFourKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// value=ID
protected class Boolean_ValueAssignment_3 extends AssignmentToken  {
	
	public Boolean_ValueAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBooleanAccess().getValueAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Boolean_KwKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBooleanAccess().getValueIDTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBooleanAccess().getValueIDTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Boolean ****************/


/************ begin Rule Transient1 ****************
 *
 * Transient1:
 * 	'#5' (precStar?='*' | prec=INT) (',' (scaleStar?='*' | scale=INT))?;
 *
 **/

// '#5' (precStar?='*' | prec=INT) (',' (scaleStar?='*' | scale=INT))?
protected class Transient1_Group extends GroupToken {
	
	public Transient1_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTransient1Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Transient1_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Transient1_Alternatives_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTransient1Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '#5'
protected class Transient1_NumberSignDigitFiveKeyword_0 extends KeywordToken  {
	
	public Transient1_NumberSignDigitFiveKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTransient1Access().getNumberSignDigitFiveKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// (precStar?='*' | prec=INT)
protected class Transient1_Alternatives_1 extends AlternativesToken {

	public Transient1_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getTransient1Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Transient1_PrecStarAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Transient1_PrecAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// precStar?='*'
protected class Transient1_PrecStarAssignment_1_0 extends AssignmentToken  {
	
	public Transient1_PrecStarAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTransient1Access().getPrecStarAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Transient1_NumberSignDigitFiveKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("precStar",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("precStar");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getTransient1Access().getPrecStarAsteriskKeyword_1_0_0();
			return obj;
		}
		return null;
	}

}

// prec=INT
protected class Transient1_PrecAssignment_1_1 extends AssignmentToken  {
	
	public Transient1_PrecAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTransient1Access().getPrecAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Transient1_NumberSignDigitFiveKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("prec",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("prec");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTransient1Access().getPrecINTTerminalRuleCall_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTransient1Access().getPrecINTTerminalRuleCall_1_1_0();
			return obj;
		}
		return null;
	}

}


// (',' (scaleStar?='*' | scale=INT))?
protected class Transient1_Group_2 extends GroupToken {
	
	public Transient1_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTransient1Access().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Transient1_Alternatives_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ','
protected class Transient1_CommaKeyword_2_0 extends KeywordToken  {
	
	public Transient1_CommaKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTransient1Access().getCommaKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Transient1_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (scaleStar?='*' | scale=INT)
protected class Transient1_Alternatives_2_1 extends AlternativesToken {

	public Transient1_Alternatives_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getTransient1Access().getAlternatives_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Transient1_ScaleStarAssignment_2_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Transient1_ScaleAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// scaleStar?='*'
protected class Transient1_ScaleStarAssignment_2_1_0 extends AssignmentToken  {
	
	public Transient1_ScaleStarAssignment_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTransient1Access().getScaleStarAssignment_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Transient1_CommaKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scaleStar",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scaleStar");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getTransient1Access().getScaleStarAsteriskKeyword_2_1_0_0();
			return obj;
		}
		return null;
	}

}

// scale=INT
protected class Transient1_ScaleAssignment_2_1_1 extends AssignmentToken  {
	
	public Transient1_ScaleAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTransient1Access().getScaleAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Transient1_CommaKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scale",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scale");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTransient1Access().getScaleINTTerminalRuleCall_2_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTransient1Access().getScaleINTTerminalRuleCall_2_1_1_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule Transient1 ****************/


/************ begin Rule Consumed1 ****************
 *
 * Consumed1:
 * 	'#6' ('v1' v1+=INT* v2+=ID | 'v2' v2+=ID* v1+=INT);
 *
 **/

// '#6' ('v1' v1+=INT* v2+=ID | 'v2' v2+=ID* v1+=INT)
protected class Consumed1_Group extends GroupToken {
	
	public Consumed1_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getConsumed1Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Consumed1_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getConsumed1Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '#6'
protected class Consumed1_NumberSignDigitSixKeyword_0 extends KeywordToken  {
	
	public Consumed1_NumberSignDigitSixKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getConsumed1Access().getNumberSignDigitSixKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ('v1' v1+=INT* v2+=ID | 'v2' v2+=ID* v1+=INT)
protected class Consumed1_Alternatives_1 extends AlternativesToken {

	public Consumed1_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getConsumed1Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Consumed1_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Consumed1_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// 'v1' v1+=INT* v2+=ID
protected class Consumed1_Group_1_0 extends GroupToken {
	
	public Consumed1_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getConsumed1Access().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Consumed1_V2Assignment_1_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// 'v1'
protected class Consumed1_V1Keyword_1_0_0 extends KeywordToken  {
	
	public Consumed1_V1Keyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getConsumed1Access().getV1Keyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Consumed1_NumberSignDigitSixKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// v1+=INT*
protected class Consumed1_V1Assignment_1_0_1 extends AssignmentToken  {
	
	public Consumed1_V1Assignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getConsumed1Access().getV1Assignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Consumed1_V1Assignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Consumed1_V1Keyword_1_0_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("v1",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("v1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getConsumed1Access().getV1INTTerminalRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getConsumed1Access().getV1INTTerminalRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}

// v2+=ID
protected class Consumed1_V2Assignment_1_0_2 extends AssignmentToken  {
	
	public Consumed1_V2Assignment_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getConsumed1Access().getV2Assignment_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Consumed1_V1Assignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Consumed1_V1Keyword_1_0_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("v2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("v2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getConsumed1Access().getV2IDTerminalRuleCall_1_0_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getConsumed1Access().getV2IDTerminalRuleCall_1_0_2_0();
			return obj;
		}
		return null;
	}

}


// 'v2' v2+=ID* v1+=INT
protected class Consumed1_Group_1_1 extends GroupToken {
	
	public Consumed1_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getConsumed1Access().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Consumed1_V1Assignment_1_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// 'v2'
protected class Consumed1_V2Keyword_1_1_0 extends KeywordToken  {
	
	public Consumed1_V2Keyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getConsumed1Access().getV2Keyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Consumed1_NumberSignDigitSixKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// v2+=ID*
protected class Consumed1_V2Assignment_1_1_1 extends AssignmentToken  {
	
	public Consumed1_V2Assignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getConsumed1Access().getV2Assignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Consumed1_V2Assignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Consumed1_V2Keyword_1_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("v2",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("v2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getConsumed1Access().getV2IDTerminalRuleCall_1_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getConsumed1Access().getV2IDTerminalRuleCall_1_1_1_0();
			return obj;
		}
		return null;
	}

}

// v1+=INT
protected class Consumed1_V1Assignment_1_1_2 extends AssignmentToken  {
	
	public Consumed1_V1Assignment_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getConsumed1Access().getV1Assignment_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Consumed1_V2Assignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Consumed1_V2Keyword_1_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("v1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("v1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getConsumed1Access().getV1INTTerminalRuleCall_1_1_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getConsumed1Access().getV1INTTerminalRuleCall_1_1_2_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule Consumed1 ****************/


/************ begin Rule Consumed2 ****************
 *
 * Consumed2:
 * 	'#7' child=Consumed1;
 *
 **/

// '#7' child=Consumed1
protected class Consumed2_Group extends GroupToken {
	
	public Consumed2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getConsumed2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Consumed2_ChildAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getConsumed2Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '#7'
protected class Consumed2_NumberSignDigitSevenKeyword_0 extends KeywordToken  {
	
	public Consumed2_NumberSignDigitSevenKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getConsumed2Access().getNumberSignDigitSevenKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// child=Consumed1
protected class Consumed2_ChildAssignment_1 extends AssignmentToken  {
	
	public Consumed2_ChildAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getConsumed2Access().getChildAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Consumed1_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("child",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("child");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getConsumed1Rule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getConsumed2Access().getChildConsumed1ParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Consumed2_NumberSignDigitSevenKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule Consumed2 ****************/


/************ begin Rule Loop1 ****************
 *
 * Loop1:
 * 	'kw0'? '#8' id+=ID 'kw1'? id+=ID ('kw2'* 'kw30')+;
 *
 **/

// 'kw0'? '#8' id+=ID 'kw1'? id+=ID ('kw2'* 'kw30')+
protected class Loop1_Group extends GroupToken {
	
	public Loop1_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLoop1Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop1_Group_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLoop1Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '#8'
protected class Loop1_NumberSignDigitEightKeyword_1 extends KeywordToken  {
	
	public Loop1_NumberSignDigitEightKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoop1Access().getNumberSignDigitEightKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// id+=ID
protected class Loop1_IdAssignment_2 extends AssignmentToken  {
	
	public Loop1_IdAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoop1Access().getIdAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop1_NumberSignDigitEightKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLoop1Access().getIdIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLoop1Access().getIdIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// id+=ID
protected class Loop1_IdAssignment_4 extends AssignmentToken  {
	
	public Loop1_IdAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoop1Access().getIdAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop1_IdAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLoop1Access().getIdIDTerminalRuleCall_4_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLoop1Access().getIdIDTerminalRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// ('kw2'* 'kw30')+
protected class Loop1_Group_5 extends GroupToken {
	
	public Loop1_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLoop1Access().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop1_Kw30Keyword_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// 'kw30'
protected class Loop1_Kw30Keyword_5_1 extends KeywordToken  {
	
	public Loop1_Kw30Keyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoop1Access().getKw30Keyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop1_IdAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule Loop1 ****************/


/************ begin Rule Loop2 ****************
 *
 * Loop2:
 * 	'#9' id+=ID ('kw1' | id+=ID 'kw2') ('kw3' | id+=ID 'kw4')? ('kw5' | 'kw6');
 *
 **/

// '#9' id+=ID ('kw1' | id+=ID 'kw2') ('kw3' | id+=ID 'kw4')? ('kw5' | 'kw6')
protected class Loop2_Group extends GroupToken {
	
	public Loop2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLoop2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop2_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLoop2Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '#9'
protected class Loop2_NumberSignDigitNineKeyword_0 extends KeywordToken  {
	
	public Loop2_NumberSignDigitNineKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoop2Access().getNumberSignDigitNineKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// id+=ID
protected class Loop2_IdAssignment_1 extends AssignmentToken  {
	
	public Loop2_IdAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoop2Access().getIdAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop2_NumberSignDigitNineKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLoop2Access().getIdIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLoop2Access().getIdIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ('kw1' | id+=ID 'kw2')
protected class Loop2_Alternatives_2 extends AlternativesToken {

	public Loop2_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getLoop2Access().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop2_Kw1Keyword_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Loop2_Group_2_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// 'kw1'
protected class Loop2_Kw1Keyword_2_0 extends KeywordToken  {
	
	public Loop2_Kw1Keyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoop2Access().getKw1Keyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop2_IdAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// id+=ID 'kw2'
protected class Loop2_Group_2_1 extends GroupToken {
	
	public Loop2_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLoop2Access().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop2_Kw2Keyword_2_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// id+=ID
protected class Loop2_IdAssignment_2_1_0 extends AssignmentToken  {
	
	public Loop2_IdAssignment_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoop2Access().getIdAssignment_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop2_IdAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLoop2Access().getIdIDTerminalRuleCall_2_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLoop2Access().getIdIDTerminalRuleCall_2_1_0_0();
			return obj;
		}
		return null;
	}

}

// 'kw2'
protected class Loop2_Kw2Keyword_2_1_1 extends KeywordToken  {
	
	public Loop2_Kw2Keyword_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoop2Access().getKw2Keyword_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop2_IdAssignment_2_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// ('kw3' | id+=ID 'kw4')?
protected class Loop2_Alternatives_3 extends AlternativesToken {

	public Loop2_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getLoop2Access().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop2_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// id+=ID 'kw4'
protected class Loop2_Group_3_1 extends GroupToken {
	
	public Loop2_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLoop2Access().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop2_Kw4Keyword_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// id+=ID
protected class Loop2_IdAssignment_3_1_0 extends AssignmentToken  {
	
	public Loop2_IdAssignment_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoop2Access().getIdAssignment_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop2_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLoop2Access().getIdIDTerminalRuleCall_3_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLoop2Access().getIdIDTerminalRuleCall_3_1_0_0();
			return obj;
		}
		return null;
	}

}

// 'kw4'
protected class Loop2_Kw4Keyword_3_1_1 extends KeywordToken  {
	
	public Loop2_Kw4Keyword_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoop2Access().getKw4Keyword_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop2_IdAssignment_3_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// ('kw5' | 'kw6')
protected class Loop2_Alternatives_4 extends AlternativesToken {

	public Loop2_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getLoop2Access().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop2_Kw5Keyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// 'kw5'
protected class Loop2_Kw5Keyword_4_0 extends KeywordToken  {
	
	public Loop2_Kw5Keyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoop2Access().getKw5Keyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop2_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Loop2_Alternatives_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



/************ end Rule Loop2 ****************/


/************ begin Rule Loop3 ****************
 *
 * Loop3:
 * 	('kw1' | 'kw2' | 'kw3') '#10' id+=ID ('kw4' id+=ID 'kw5')*;
 *
 **/

// ('kw1' | 'kw2' | 'kw3') '#10' id+=ID ('kw4' id+=ID 'kw5')*
protected class Loop3_Group extends GroupToken {
	
	public Loop3_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLoop3Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop3_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Loop3_IdAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLoop3Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// ('kw1' | 'kw2' | 'kw3')
protected class Loop3_Alternatives_0 extends AlternativesToken {

	public Loop3_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getLoop3Access().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop3_Kw1Keyword_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// 'kw1'
protected class Loop3_Kw1Keyword_0_0 extends KeywordToken  {
	
	public Loop3_Kw1Keyword_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoop3Access().getKw1Keyword_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}


// '#10'
protected class Loop3_NumberSignDigitOneDigitZeroKeyword_1 extends KeywordToken  {
	
	public Loop3_NumberSignDigitOneDigitZeroKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoop3Access().getNumberSignDigitOneDigitZeroKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop3_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// id+=ID
protected class Loop3_IdAssignment_2 extends AssignmentToken  {
	
	public Loop3_IdAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoop3Access().getIdAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop3_NumberSignDigitOneDigitZeroKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLoop3Access().getIdIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLoop3Access().getIdIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ('kw4' id+=ID 'kw5')*
protected class Loop3_Group_3 extends GroupToken {
	
	public Loop3_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLoop3Access().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop3_Kw5Keyword_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// 'kw4'
protected class Loop3_Kw4Keyword_3_0 extends KeywordToken  {
	
	public Loop3_Kw4Keyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoop3Access().getKw4Keyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop3_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Loop3_IdAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// id+=ID
protected class Loop3_IdAssignment_3_1 extends AssignmentToken  {
	
	public Loop3_IdAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoop3Access().getIdAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop3_Kw4Keyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLoop3Access().getIdIDTerminalRuleCall_3_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLoop3Access().getIdIDTerminalRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}

// 'kw5'
protected class Loop3_Kw5Keyword_3_2 extends KeywordToken  {
	
	public Loop3_Kw5Keyword_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoop3Access().getKw5Keyword_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop3_IdAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule Loop3 ****************/


/************ begin Rule Loop4 ****************
 *
 * Loop4:
 * 	'#11' ('kw1' | 'kw2' | 'kw3' 'kw4') id+=ID ('kw5' ('kw6' 'kw7'?)?)+;
 *
 **/

// '#11' ('kw1' | 'kw2' | 'kw3' 'kw4') id+=ID ('kw5' ('kw6' 'kw7'?)?)+
protected class Loop4_Group extends GroupToken {
	
	public Loop4_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLoop4Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop4_Group_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLoop4Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '#11'
protected class Loop4_NumberSignDigitOneDigitOneKeyword_0 extends KeywordToken  {
	
	public Loop4_NumberSignDigitOneDigitOneKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoop4Access().getNumberSignDigitOneDigitOneKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ('kw1' | 'kw2' | 'kw3' 'kw4')
protected class Loop4_Alternatives_1 extends AlternativesToken {

	public Loop4_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getLoop4Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop4_Kw1Keyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// 'kw1'
protected class Loop4_Kw1Keyword_1_0 extends KeywordToken  {
	
	public Loop4_Kw1Keyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoop4Access().getKw1Keyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop4_NumberSignDigitOneDigitOneKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// id+=ID
protected class Loop4_IdAssignment_2 extends AssignmentToken  {
	
	public Loop4_IdAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoop4Access().getIdAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop4_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLoop4Access().getIdIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLoop4Access().getIdIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ('kw5' ('kw6' 'kw7'?)?)+
protected class Loop4_Group_3 extends GroupToken {
	
	public Loop4_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLoop4Access().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop4_Kw5Keyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// 'kw5'
protected class Loop4_Kw5Keyword_3_0 extends KeywordToken  {
	
	public Loop4_Kw5Keyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoop4Access().getKw5Keyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop4_IdAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule Loop4 ****************/


/************ begin Rule LoopBug285452 ****************
 *
 * LoopBug285452:
 * 	'#12' (interface?="interface" | "class") name=ID;
 *
 **/

// '#12' (interface?="interface" | "class") name=ID
protected class LoopBug285452_Group extends GroupToken {
	
	public LoopBug285452_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLoopBug285452Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LoopBug285452_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLoopBug285452Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '#12'
protected class LoopBug285452_NumberSignDigitOneDigitTwoKeyword_0 extends KeywordToken  {
	
	public LoopBug285452_NumberSignDigitOneDigitTwoKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoopBug285452Access().getNumberSignDigitOneDigitTwoKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// (interface?="interface" | "class")
protected class LoopBug285452_Alternatives_1 extends AlternativesToken {

	public LoopBug285452_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getLoopBug285452Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LoopBug285452_InterfaceAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new LoopBug285452_ClassKeyword_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// interface?="interface"
protected class LoopBug285452_InterfaceAssignment_1_0 extends AssignmentToken  {
	
	public LoopBug285452_InterfaceAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoopBug285452Access().getInterfaceAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LoopBug285452_NumberSignDigitOneDigitTwoKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("interface",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("interface");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getLoopBug285452Access().getInterfaceInterfaceKeyword_1_0_0();
			return obj;
		}
		return null;
	}

}

// "class"
protected class LoopBug285452_ClassKeyword_1_1 extends KeywordToken  {
	
	public LoopBug285452_ClassKeyword_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoopBug285452Access().getClassKeyword_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LoopBug285452_NumberSignDigitOneDigitTwoKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// name=ID
protected class LoopBug285452_NameAssignment_2 extends AssignmentToken  {
	
	public LoopBug285452_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoopBug285452Access().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LoopBug285452_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLoopBug285452Access().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLoopBug285452Access().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule LoopBug285452 ****************/


/************ begin Rule DuplicateBug284491 ****************
 *
 * / * SuppressWarnings[noInstantiation, potentialOverride] * / DuplicateBug284491:
 * 	'#13' (static?='static' | final?='final' | transient?='transient')*;
 *
 **/

// '#13' (static?='static' | final?='final' | transient?='transient')*
protected class DuplicateBug284491_Group extends GroupToken {
	
	public DuplicateBug284491_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDuplicateBug284491Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DuplicateBug284491_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DuplicateBug284491_NumberSignDigitOneDigitThreeKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDuplicateBug284491Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '#13'
protected class DuplicateBug284491_NumberSignDigitOneDigitThreeKeyword_0 extends KeywordToken  {
	
	public DuplicateBug284491_NumberSignDigitOneDigitThreeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDuplicateBug284491Access().getNumberSignDigitOneDigitThreeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// (static?='static' | final?='final' | transient?='transient')*
protected class DuplicateBug284491_Alternatives_1 extends AlternativesToken {

	public DuplicateBug284491_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDuplicateBug284491Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DuplicateBug284491_StaticAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DuplicateBug284491_FinalAssignment_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DuplicateBug284491_TransientAssignment_1_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// static?='static'
protected class DuplicateBug284491_StaticAssignment_1_0 extends AssignmentToken  {
	
	public DuplicateBug284491_StaticAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDuplicateBug284491Access().getStaticAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DuplicateBug284491_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DuplicateBug284491_NumberSignDigitOneDigitThreeKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("static",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("static");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDuplicateBug284491Access().getStaticStaticKeyword_1_0_0();
			return obj;
		}
		return null;
	}

}

// final?='final'
protected class DuplicateBug284491_FinalAssignment_1_1 extends AssignmentToken  {
	
	public DuplicateBug284491_FinalAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDuplicateBug284491Access().getFinalAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DuplicateBug284491_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DuplicateBug284491_NumberSignDigitOneDigitThreeKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("final",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("final");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDuplicateBug284491Access().getFinalFinalKeyword_1_1_0();
			return obj;
		}
		return null;
	}

}

// transient?='transient'
protected class DuplicateBug284491_TransientAssignment_1_2 extends AssignmentToken  {
	
	public DuplicateBug284491_TransientAssignment_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDuplicateBug284491Access().getTransientAssignment_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DuplicateBug284491_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DuplicateBug284491_NumberSignDigitOneDigitThreeKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("transient",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("transient");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getDuplicateBug284491Access().getTransientTransientKeyword_1_2_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule DuplicateBug284491 ****************/


/************ begin Rule EmptyObjectBug284850 ****************
 *
 * EmptyObjectBug284850:
 * 	'#14' items=EmptyObjectItems;
 *
 **/

// '#14' items=EmptyObjectItems
protected class EmptyObjectBug284850_Group extends GroupToken {
	
	public EmptyObjectBug284850_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEmptyObjectBug284850Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmptyObjectBug284850_ItemsAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEmptyObjectBug284850Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '#14'
protected class EmptyObjectBug284850_NumberSignDigitOneDigitFourKeyword_0 extends KeywordToken  {
	
	public EmptyObjectBug284850_NumberSignDigitOneDigitFourKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEmptyObjectBug284850Access().getNumberSignDigitOneDigitFourKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// items=EmptyObjectItems
protected class EmptyObjectBug284850_ItemsAssignment_1 extends AssignmentToken  {
	
	public EmptyObjectBug284850_ItemsAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEmptyObjectBug284850Access().getItemsAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmptyObjectItems_ListAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("items",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("items");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEmptyObjectItemsRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEmptyObjectBug284850Access().getItemsEmptyObjectItemsParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EmptyObjectBug284850_NumberSignDigitOneDigitFourKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule EmptyObjectBug284850 ****************/


/************ begin Rule EmptyObjectItems ****************
 *
 * / * SuppressWarnings[noInstantiation] * / EmptyObjectItems:
 * 	list+=EmptyObjectItem*;
 *
 **/

// list+=EmptyObjectItem*
protected class EmptyObjectItems_ListAssignment extends AssignmentToken  {
	
	public EmptyObjectItems_ListAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEmptyObjectItemsAccess().getListAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmptyObjectItem_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("list",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("list");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEmptyObjectItemRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEmptyObjectItemsAccess().getListEmptyObjectItemParserRuleCall_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EmptyObjectItems_ListAssignment(lastRuleCallOrigin, next, actIndex, consumed);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index - 1, consumed);
		}	
	}	
}

/************ end Rule EmptyObjectItems ****************/


/************ begin Rule EmptyObjectItem ****************
 *
 * EmptyObjectItem:
 * 	'item' name=ID;
 *
 **/

// 'item' name=ID
protected class EmptyObjectItem_Group extends GroupToken {
	
	public EmptyObjectItem_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEmptyObjectItemAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmptyObjectItem_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEmptyObjectItemRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// 'item'
protected class EmptyObjectItem_ItemKeyword_0 extends KeywordToken  {
	
	public EmptyObjectItem_ItemKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEmptyObjectItemAccess().getItemKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class EmptyObjectItem_NameAssignment_1 extends AssignmentToken  {
	
	public EmptyObjectItem_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEmptyObjectItemAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmptyObjectItem_ItemKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEmptyObjectItemAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEmptyObjectItemAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule EmptyObjectItem ****************/


/************ begin Rule MultiInheritanceBug280439 ****************
 *
 * MultiInheritanceBug280439:
 * 	'#15' val=ConcreteMulti;
 *
 **/

// '#15' val=ConcreteMulti
protected class MultiInheritanceBug280439_Group extends GroupToken {
	
	public MultiInheritanceBug280439_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMultiInheritanceBug280439Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiInheritanceBug280439_ValAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMultiInheritanceBug280439Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '#15'
protected class MultiInheritanceBug280439_NumberSignDigitOneDigitFiveKeyword_0 extends KeywordToken  {
	
	public MultiInheritanceBug280439_NumberSignDigitOneDigitFiveKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMultiInheritanceBug280439Access().getNumberSignDigitOneDigitFiveKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// val=ConcreteMulti
protected class MultiInheritanceBug280439_ValAssignment_1 extends AssignmentToken  {
	
	public MultiInheritanceBug280439_ValAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMultiInheritanceBug280439Access().getValAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ConcreteMulti_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("val",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("val");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getConcreteMultiRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMultiInheritanceBug280439Access().getValConcreteMultiParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MultiInheritanceBug280439_NumberSignDigitOneDigitFiveKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule MultiInheritanceBug280439 ****************/


/************ begin Rule AbstractMulti1 ****************
 *
 * AbstractMulti1:
 * 	ConcreteMulti | m1=ID;
 *
 **/

// ConcreteMulti | m1=ID
protected class AbstractMulti1_Alternatives extends AlternativesToken {

	public AbstractMulti1_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractMulti1Access().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractMulti1_ConcreteMultiParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractMulti1_M1Assignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAbstractMulti1Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getConcreteMultiRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// ConcreteMulti
protected class AbstractMulti1_ConcreteMultiParserRuleCall_0 extends RuleCallToken {
	
	public AbstractMulti1_ConcreteMultiParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractMulti1Access().getConcreteMultiParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ConcreteMulti_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getConcreteMultiRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ConcreteMulti_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// m1=ID
protected class AbstractMulti1_M1Assignment_1 extends AssignmentToken  {
	
	public AbstractMulti1_M1Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractMulti1Access().getM1Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAbstractMulti1Rule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("m1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("m1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAbstractMulti1Access().getM1IDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAbstractMulti1Access().getM1IDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule AbstractMulti1 ****************/


/************ begin Rule AbstractMulti2 ****************
 *
 * AbstractMulti2:
 * 	ConcreteMulti | m2=ID;
 *
 **/

// ConcreteMulti | m2=ID
protected class AbstractMulti2_Alternatives extends AlternativesToken {

	public AbstractMulti2_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAbstractMulti2Access().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractMulti2_ConcreteMultiParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AbstractMulti2_M2Assignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAbstractMulti2Rule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getConcreteMultiRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// ConcreteMulti
protected class AbstractMulti2_ConcreteMultiParserRuleCall_0 extends RuleCallToken {
	
	public AbstractMulti2_ConcreteMultiParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractMulti2Access().getConcreteMultiParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ConcreteMulti_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getConcreteMultiRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ConcreteMulti_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// m2=ID
protected class AbstractMulti2_M2Assignment_1 extends AssignmentToken  {
	
	public AbstractMulti2_M2Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractMulti2Access().getM2Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAbstractMulti2Rule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("m2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("m2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAbstractMulti2Access().getM2IDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAbstractMulti2Access().getM2IDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule AbstractMulti2 ****************/


/************ begin Rule ConcreteMulti ****************
 *
 * ConcreteMulti:
 * 	m1=ID m2=ID;
 *
 **/

// m1=ID m2=ID
protected class ConcreteMulti_Group extends GroupToken {
	
	public ConcreteMulti_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getConcreteMultiAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ConcreteMulti_M2Assignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getConcreteMultiRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// m1=ID
protected class ConcreteMulti_M1Assignment_0 extends AssignmentToken  {
	
	public ConcreteMulti_M1Assignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getConcreteMultiAccess().getM1Assignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("m1",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("m1");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getConcreteMultiAccess().getM1IDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getConcreteMultiAccess().getM1IDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// m2=ID
protected class ConcreteMulti_M2Assignment_1 extends AssignmentToken  {
	
	public ConcreteMulti_M2Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getConcreteMultiAccess().getM2Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ConcreteMulti_M1Assignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("m2",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("m2");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getConcreteMultiAccess().getM2IDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getConcreteMultiAccess().getM2IDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule ConcreteMulti ****************/


/************ begin Rule EObjectRef ****************
 *
 * EObjectRef:
 * 	'#16' obj=EObjectElement 'refs' ref=[ecore::EObject];
 *
 **/

// '#16' obj=EObjectElement 'refs' ref=[ecore::EObject]
protected class EObjectRef_Group extends GroupToken {
	
	public EObjectRef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEObjectRefAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EObjectRef_RefAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEObjectRefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// '#16'
protected class EObjectRef_NumberSignDigitOneDigitSixKeyword_0 extends KeywordToken  {
	
	public EObjectRef_NumberSignDigitOneDigitSixKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEObjectRefAccess().getNumberSignDigitOneDigitSixKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// obj=EObjectElement
protected class EObjectRef_ObjAssignment_1 extends AssignmentToken  {
	
	public EObjectRef_ObjAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEObjectRefAccess().getObjAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EObjectElement_NameAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("obj",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("obj");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEObjectElementRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEObjectRefAccess().getObjEObjectElementParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EObjectRef_NumberSignDigitOneDigitSixKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// 'refs'
protected class EObjectRef_RefsKeyword_2 extends KeywordToken  {
	
	public EObjectRef_RefsKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEObjectRefAccess().getRefsKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EObjectRef_ObjAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ref=[ecore::EObject]
protected class EObjectRef_RefAssignment_3 extends AssignmentToken  {
	
	public EObjectRef_RefAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEObjectRefAccess().getRefAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EObjectRef_RefsKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEObjectRefAccess().getRefEObjectCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEObjectRefAccess().getRefEObjectCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule EObjectRef ****************/


/************ begin Rule EObjectElement ****************
 *
 * EObjectElement:
 * 	name=ID;
 *
 **/

// name=ID
protected class EObjectElement_NameAssignment extends AssignmentToken  {
	
	public EObjectElement_NameAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEObjectElementAccess().getNameAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEObjectElementRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEObjectElementAccess().getNameIDTerminalRuleCall_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEObjectElementAccess().getNameIDTerminalRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule EObjectElement ****************/


/************ begin Rule TypeBug305577_1 ****************
 *
 * TypeBug305577_1:
 * 	"#17" (TypeBug1A | TypeBug1B);
 *
 **/

// "#17" (TypeBug1A | TypeBug1B)
protected class TypeBug305577_1_Group extends GroupToken {
	
	public TypeBug305577_1_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTypeBug305577_1Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug305577_1_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeBug1AAccess().getTypeBug1AAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug1BAccess().getTypeBug1BAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#17"
protected class TypeBug305577_1_NumberSignDigitOneDigitSevenKeyword_0 extends KeywordToken  {
	
	public TypeBug305577_1_NumberSignDigitOneDigitSevenKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTypeBug305577_1Access().getNumberSignDigitOneDigitSevenKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// (TypeBug1A | TypeBug1B)
protected class TypeBug305577_1_Alternatives_1 extends AlternativesToken {

	public TypeBug305577_1_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getTypeBug305577_1Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug305577_1_TypeBug1AParserRuleCall_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TypeBug305577_1_TypeBug1BParserRuleCall_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// TypeBug1A
protected class TypeBug305577_1_TypeBug1AParserRuleCall_1_0 extends RuleCallToken {
	
	public TypeBug305577_1_TypeBug1AParserRuleCall_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTypeBug305577_1Access().getTypeBug1AParserRuleCall_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug1A_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeBug1AAccess().getTypeBug1AAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(TypeBug1A_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug305577_1_NumberSignDigitOneDigitSevenKeyword_0(lastRuleCallOrigin, next, actIndex, inst);
			default: return null;
		}	
	}	
}

// TypeBug1B
protected class TypeBug305577_1_TypeBug1BParserRuleCall_1_1 extends RuleCallToken {
	
	public TypeBug305577_1_TypeBug1BParserRuleCall_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTypeBug305577_1Access().getTypeBug1BParserRuleCall_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug1B_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeBug1BAccess().getTypeBug1BAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(TypeBug1B_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug305577_1_NumberSignDigitOneDigitSevenKeyword_0(lastRuleCallOrigin, next, actIndex, inst);
			default: return null;
		}	
	}	
}



/************ end Rule TypeBug305577_1 ****************/


/************ begin Rule TypeBug305577_2 ****************
 *
 * TypeBug305577_2:
 * 	"#18" (TypeBug2B | TypeBug2A);
 *
 **/

// "#18" (TypeBug2B | TypeBug2A)
protected class TypeBug305577_2_Group extends GroupToken {
	
	public TypeBug305577_2_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTypeBug305577_2Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug305577_2_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeBug2AAccess().getTypeBug2AAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTypeBug2BAccess().getTypeBug2BAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#18"
protected class TypeBug305577_2_NumberSignDigitOneDigitEightKeyword_0 extends KeywordToken  {
	
	public TypeBug305577_2_NumberSignDigitOneDigitEightKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTypeBug305577_2Access().getNumberSignDigitOneDigitEightKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// (TypeBug2B | TypeBug2A)
protected class TypeBug305577_2_Alternatives_1 extends AlternativesToken {

	public TypeBug305577_2_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getTypeBug305577_2Access().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug305577_2_TypeBug2BParserRuleCall_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TypeBug305577_2_TypeBug2AParserRuleCall_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// TypeBug2B
protected class TypeBug305577_2_TypeBug2BParserRuleCall_1_0 extends RuleCallToken {
	
	public TypeBug305577_2_TypeBug2BParserRuleCall_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTypeBug305577_2Access().getTypeBug2BParserRuleCall_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug2B_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeBug2BAccess().getTypeBug2BAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(TypeBug2B_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug305577_2_NumberSignDigitOneDigitEightKeyword_0(lastRuleCallOrigin, next, actIndex, inst);
			default: return null;
		}	
	}	
}

// TypeBug2A
protected class TypeBug305577_2_TypeBug2AParserRuleCall_1_1 extends RuleCallToken {
	
	public TypeBug305577_2_TypeBug2AParserRuleCall_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTypeBug305577_2Access().getTypeBug2AParserRuleCall_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug2A_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeBug2AAccess().getTypeBug2AAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(TypeBug2A_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug305577_2_NumberSignDigitOneDigitEightKeyword_0(lastRuleCallOrigin, next, actIndex, inst);
			default: return null;
		}	
	}	
}



/************ end Rule TypeBug305577_2 ****************/


/************ begin Rule TypeBug1AInh ****************
 *
 * TypeBug1AInh TypeBug1A:
 * 	TypeBug1B
 *
 **/

// TypeBug1B
protected class TypeBug1AInh_TypeBug1BParserRuleCall extends RuleCallToken {
	
	public TypeBug1AInh_TypeBug1BParserRuleCall(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTypeBug1AInhAccess().getTypeBug1BParserRuleCall();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug1B_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeBug1BAccess().getTypeBug1BAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(TypeBug1B_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

/************ end Rule TypeBug1AInh ****************/


/************ begin Rule TypeBug1A ****************
 *
 * TypeBug1A:
 * 	{TypeBug1A} "ka" name=ID;
 *
 **/

// {TypeBug1A} "ka" name=ID
protected class TypeBug1A_Group extends GroupToken {
	
	public TypeBug1A_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTypeBug1AAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug1A_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeBug1AAccess().getTypeBug1AAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {TypeBug1A}
protected class TypeBug1A_TypeBug1AAction_0 extends ActionToken  {

	public TypeBug1A_TypeBug1AAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getTypeBug1AAccess().getTypeBug1AAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "ka"
protected class TypeBug1A_KaKeyword_1 extends KeywordToken  {
	
	public TypeBug1A_KaKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTypeBug1AAccess().getKaKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug1A_TypeBug1AAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class TypeBug1A_NameAssignment_2 extends AssignmentToken  {
	
	public TypeBug1A_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTypeBug1AAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug1A_KaKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTypeBug1AAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTypeBug1AAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule TypeBug1A ****************/


/************ begin Rule TypeBug1B ****************
 *
 * TypeBug1B:
 * 	{TypeBug1B} "kb" name=ID;
 *
 **/

// {TypeBug1B} "kb" name=ID
protected class TypeBug1B_Group extends GroupToken {
	
	public TypeBug1B_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTypeBug1BAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug1B_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeBug1BAccess().getTypeBug1BAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {TypeBug1B}
protected class TypeBug1B_TypeBug1BAction_0 extends ActionToken  {

	public TypeBug1B_TypeBug1BAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getTypeBug1BAccess().getTypeBug1BAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "kb"
protected class TypeBug1B_KbKeyword_1 extends KeywordToken  {
	
	public TypeBug1B_KbKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTypeBug1BAccess().getKbKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug1B_TypeBug1BAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class TypeBug1B_NameAssignment_2 extends AssignmentToken  {
	
	public TypeBug1B_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTypeBug1BAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug1B_KbKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTypeBug1BAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTypeBug1BAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule TypeBug1B ****************/


/************ begin Rule TypeBug2AInh ****************
 *
 * TypeBug2AInh TypeBug2A:
 * 	TypeBug2B
 *
 **/

// TypeBug2B
protected class TypeBug2AInh_TypeBug2BParserRuleCall extends RuleCallToken {
	
	public TypeBug2AInh_TypeBug2BParserRuleCall(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTypeBug2AInhAccess().getTypeBug2BParserRuleCall();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug2B_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeBug2BAccess().getTypeBug2BAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(TypeBug2B_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

/************ end Rule TypeBug2AInh ****************/


/************ begin Rule TypeBug2A ****************
 *
 * TypeBug2A:
 * 	{TypeBug2A} "ka" name=ID;
 *
 **/

// {TypeBug2A} "ka" name=ID
protected class TypeBug2A_Group extends GroupToken {
	
	public TypeBug2A_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTypeBug2AAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug2A_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeBug2AAccess().getTypeBug2AAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {TypeBug2A}
protected class TypeBug2A_TypeBug2AAction_0 extends ActionToken  {

	public TypeBug2A_TypeBug2AAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getTypeBug2AAccess().getTypeBug2AAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "ka"
protected class TypeBug2A_KaKeyword_1 extends KeywordToken  {
	
	public TypeBug2A_KaKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTypeBug2AAccess().getKaKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug2A_TypeBug2AAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class TypeBug2A_NameAssignment_2 extends AssignmentToken  {
	
	public TypeBug2A_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTypeBug2AAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug2A_KaKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTypeBug2AAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTypeBug2AAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule TypeBug2A ****************/


/************ begin Rule TypeBug2B ****************
 *
 * TypeBug2B:
 * 	{TypeBug2B} "kb" name=ID;
 *
 **/

// {TypeBug2B} "kb" name=ID
protected class TypeBug2B_Group extends GroupToken {
	
	public TypeBug2B_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTypeBug2BAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug2B_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeBug2BAccess().getTypeBug2BAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {TypeBug2B}
protected class TypeBug2B_TypeBug2BAction_0 extends ActionToken  {

	public TypeBug2B_TypeBug2BAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getTypeBug2BAccess().getTypeBug2BAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "kb"
protected class TypeBug2B_KbKeyword_1 extends KeywordToken  {
	
	public TypeBug2B_KbKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTypeBug2BAccess().getKbKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug2B_TypeBug2BAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class TypeBug2B_NameAssignment_2 extends AssignmentToken  {
	
	public TypeBug2B_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTypeBug2BAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeBug2B_KbKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTypeBug2BAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTypeBug2BAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule TypeBug2B ****************/


/************ begin Rule Bug305171 ****************
 *
 * Bug305171:
 * 	"#19" (('kx' x+=ID (',' x+=ID)*)? (('ky' y+=ID (',' y+=ID)*)? ('kz' z+=ID (',' z+=ID)*)?)) name=ID;
 *
 **/

// "#19" (('kx' x+=ID (',' x+=ID)*)? (('ky' y+=ID (',' y+=ID)*)? ('kz' z+=ID (',' z+=ID)*)?)) name=ID
protected class Bug305171_Group extends GroupToken {
	
	public Bug305171_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug305171Access().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBug305171Rule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#19"
protected class Bug305171_NumberSignDigitOneDigitNineKeyword_0 extends KeywordToken  {
	
	public Bug305171_NumberSignDigitOneDigitNineKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBug305171Access().getNumberSignDigitOneDigitNineKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// (('kx' x+=ID (',' x+=ID)*)? (('ky' y+=ID (',' y+=ID)*)? ('kz' z+=ID (',' z+=ID)*)?))
protected class Bug305171_Group_1 extends GroupToken {
	
	public Bug305171_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug305171Access().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_Group_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ('kx' x+=ID (',' x+=ID)*)?
protected class Bug305171_Group_1_0 extends GroupToken {
	
	public Bug305171_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug305171Access().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_Group_1_0_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug305171_XAssignment_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// 'kx'
protected class Bug305171_KxKeyword_1_0_0 extends KeywordToken  {
	
	public Bug305171_KxKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBug305171Access().getKxKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_NumberSignDigitOneDigitNineKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// x+=ID
protected class Bug305171_XAssignment_1_0_1 extends AssignmentToken  {
	
	public Bug305171_XAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBug305171Access().getXAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_KxKeyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBug305171Access().getXIDTerminalRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBug305171Access().getXIDTerminalRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}

// (',' x+=ID)*
protected class Bug305171_Group_1_0_2 extends GroupToken {
	
	public Bug305171_Group_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug305171Access().getGroup_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_XAssignment_1_0_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ','
protected class Bug305171_CommaKeyword_1_0_2_0 extends KeywordToken  {
	
	public Bug305171_CommaKeyword_1_0_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBug305171Access().getCommaKeyword_1_0_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_Group_1_0_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug305171_XAssignment_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// x+=ID
protected class Bug305171_XAssignment_1_0_2_1 extends AssignmentToken  {
	
	public Bug305171_XAssignment_1_0_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBug305171Access().getXAssignment_1_0_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_CommaKeyword_1_0_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("x",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("x");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBug305171Access().getXIDTerminalRuleCall_1_0_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBug305171Access().getXIDTerminalRuleCall_1_0_2_1_0();
			return obj;
		}
		return null;
	}

}



// (('ky' y+=ID (',' y+=ID)*)? ('kz' z+=ID (',' z+=ID)*)?)
protected class Bug305171_Group_1_1 extends GroupToken {
	
	public Bug305171_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug305171Access().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_Group_1_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug305171_Group_1_1_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Bug305171_Group_1_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Bug305171_NumberSignDigitOneDigitNineKeyword_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ('ky' y+=ID (',' y+=ID)*)?
protected class Bug305171_Group_1_1_0 extends GroupToken {
	
	public Bug305171_Group_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug305171Access().getGroup_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_Group_1_1_0_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug305171_YAssignment_1_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// 'ky'
protected class Bug305171_KyKeyword_1_1_0_0 extends KeywordToken  {
	
	public Bug305171_KyKeyword_1_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBug305171Access().getKyKeyword_1_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug305171_NumberSignDigitOneDigitNineKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// y+=ID
protected class Bug305171_YAssignment_1_1_0_1 extends AssignmentToken  {
	
	public Bug305171_YAssignment_1_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBug305171Access().getYAssignment_1_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_KyKeyword_1_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("y",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("y");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBug305171Access().getYIDTerminalRuleCall_1_1_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBug305171Access().getYIDTerminalRuleCall_1_1_0_1_0();
			return obj;
		}
		return null;
	}

}

// (',' y+=ID)*
protected class Bug305171_Group_1_1_0_2 extends GroupToken {
	
	public Bug305171_Group_1_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug305171Access().getGroup_1_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_YAssignment_1_1_0_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ','
protected class Bug305171_CommaKeyword_1_1_0_2_0 extends KeywordToken  {
	
	public Bug305171_CommaKeyword_1_1_0_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBug305171Access().getCommaKeyword_1_1_0_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_Group_1_1_0_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug305171_YAssignment_1_1_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// y+=ID
protected class Bug305171_YAssignment_1_1_0_2_1 extends AssignmentToken  {
	
	public Bug305171_YAssignment_1_1_0_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBug305171Access().getYAssignment_1_1_0_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_CommaKeyword_1_1_0_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("y",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("y");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBug305171Access().getYIDTerminalRuleCall_1_1_0_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBug305171Access().getYIDTerminalRuleCall_1_1_0_2_1_0();
			return obj;
		}
		return null;
	}

}



// ('kz' z+=ID (',' z+=ID)*)?
protected class Bug305171_Group_1_1_1 extends GroupToken {
	
	public Bug305171_Group_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug305171Access().getGroup_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_Group_1_1_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug305171_ZAssignment_1_1_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// 'kz'
protected class Bug305171_KzKeyword_1_1_1_0 extends KeywordToken  {
	
	public Bug305171_KzKeyword_1_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBug305171Access().getKzKeyword_1_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_Group_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug305171_Group_1_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Bug305171_NumberSignDigitOneDigitNineKeyword_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// z+=ID
protected class Bug305171_ZAssignment_1_1_1_1 extends AssignmentToken  {
	
	public Bug305171_ZAssignment_1_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBug305171Access().getZAssignment_1_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_KzKeyword_1_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("z",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("z");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBug305171Access().getZIDTerminalRuleCall_1_1_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBug305171Access().getZIDTerminalRuleCall_1_1_1_1_0();
			return obj;
		}
		return null;
	}

}

// (',' z+=ID)*
protected class Bug305171_Group_1_1_1_2 extends GroupToken {
	
	public Bug305171_Group_1_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug305171Access().getGroup_1_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_ZAssignment_1_1_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ','
protected class Bug305171_CommaKeyword_1_1_1_2_0 extends KeywordToken  {
	
	public Bug305171_CommaKeyword_1_1_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBug305171Access().getCommaKeyword_1_1_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_Group_1_1_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug305171_ZAssignment_1_1_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// z+=ID
protected class Bug305171_ZAssignment_1_1_1_2_1 extends AssignmentToken  {
	
	public Bug305171_ZAssignment_1_1_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBug305171Access().getZAssignment_1_1_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_CommaKeyword_1_1_1_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("z",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("z");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBug305171Access().getZIDTerminalRuleCall_1_1_1_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBug305171Access().getZIDTerminalRuleCall_1_1_1_2_1_0();
			return obj;
		}
		return null;
	}

}





// name=ID
protected class Bug305171_NameAssignment_2 extends AssignmentToken  {
	
	public Bug305171_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBug305171Access().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug305171_Group_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBug305171Access().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBug305171Access().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Bug305171 ****************/


/************ begin Rule Bug310435Enum ****************
 *
 * / * SuppressWarnings[noInstantiation] * / Bug310435Enum:
 * 	"#20" ('kw1' lits+=EnumBug310435Lit1 | 'kw2' lits+=EnumBug310435Lit2)*;
 *
 **/

// "#20" ('kw1' lits+=EnumBug310435Lit1 | 'kw2' lits+=EnumBug310435Lit2)*
protected class Bug310435Enum_Group extends GroupToken {
	
	public Bug310435Enum_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug310435EnumAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Enum_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug310435Enum_NumberSignDigitTwoDigitZeroKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBug310435EnumRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#20"
protected class Bug310435Enum_NumberSignDigitTwoDigitZeroKeyword_0 extends KeywordToken  {
	
	public Bug310435Enum_NumberSignDigitTwoDigitZeroKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBug310435EnumAccess().getNumberSignDigitTwoDigitZeroKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ('kw1' lits+=EnumBug310435Lit1 | 'kw2' lits+=EnumBug310435Lit2)*
protected class Bug310435Enum_Alternatives_1 extends AlternativesToken {

	public Bug310435Enum_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBug310435EnumAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Enum_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug310435Enum_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// 'kw1' lits+=EnumBug310435Lit1
protected class Bug310435Enum_Group_1_0 extends GroupToken {
	
	public Bug310435Enum_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug310435EnumAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Enum_LitsAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// 'kw1'
protected class Bug310435Enum_Kw1Keyword_1_0_0 extends KeywordToken  {
	
	public Bug310435Enum_Kw1Keyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBug310435EnumAccess().getKw1Keyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Enum_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug310435Enum_NumberSignDigitTwoDigitZeroKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// lits+=EnumBug310435Lit1
protected class Bug310435Enum_LitsAssignment_1_0_1 extends AssignmentToken  {
	
	public Bug310435Enum_LitsAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBug310435EnumAccess().getLitsAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Enum_Kw1Keyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lits",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lits");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getBug310435EnumAccess().getLitsEnumBug310435Lit1EnumRuleCall_1_0_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getBug310435EnumAccess().getLitsEnumBug310435Lit1EnumRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// 'kw2' lits+=EnumBug310435Lit2
protected class Bug310435Enum_Group_1_1 extends GroupToken {
	
	public Bug310435Enum_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug310435EnumAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Enum_LitsAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// 'kw2'
protected class Bug310435Enum_Kw2Keyword_1_1_0 extends KeywordToken  {
	
	public Bug310435Enum_Kw2Keyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBug310435EnumAccess().getKw2Keyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Enum_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug310435Enum_NumberSignDigitTwoDigitZeroKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// lits+=EnumBug310435Lit2
protected class Bug310435Enum_LitsAssignment_1_1_1 extends AssignmentToken  {
	
	public Bug310435Enum_LitsAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBug310435EnumAccess().getLitsAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Enum_Kw2Keyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lits",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lits");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getBug310435EnumAccess().getLitsEnumBug310435Lit2EnumRuleCall_1_1_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getBug310435EnumAccess().getLitsEnumBug310435Lit2EnumRuleCall_1_1_1_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule Bug310435Enum ****************/


/************ begin Rule Bug310435Val ****************
 *
 * / * SuppressWarnings[noInstantiation] * / Bug310435Val:
 * 	"#21" ('kw1' lits+=ID | 'kw2' lits+=STRING)*;
 *
 **/

// "#21" ('kw1' lits+=ID | 'kw2' lits+=STRING)*
protected class Bug310435Val_Group extends GroupToken {
	
	public Bug310435Val_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug310435ValAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Val_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug310435Val_NumberSignDigitTwoDigitOneKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBug310435ValRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#21"
protected class Bug310435Val_NumberSignDigitTwoDigitOneKeyword_0 extends KeywordToken  {
	
	public Bug310435Val_NumberSignDigitTwoDigitOneKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBug310435ValAccess().getNumberSignDigitTwoDigitOneKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ('kw1' lits+=ID | 'kw2' lits+=STRING)*
protected class Bug310435Val_Alternatives_1 extends AlternativesToken {

	public Bug310435Val_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBug310435ValAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Val_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug310435Val_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// 'kw1' lits+=ID
protected class Bug310435Val_Group_1_0 extends GroupToken {
	
	public Bug310435Val_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug310435ValAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Val_LitsAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// 'kw1'
protected class Bug310435Val_Kw1Keyword_1_0_0 extends KeywordToken  {
	
	public Bug310435Val_Kw1Keyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBug310435ValAccess().getKw1Keyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Val_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug310435Val_NumberSignDigitTwoDigitOneKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// lits+=ID
protected class Bug310435Val_LitsAssignment_1_0_1 extends AssignmentToken  {
	
	public Bug310435Val_LitsAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBug310435ValAccess().getLitsAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Val_Kw1Keyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lits",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lits");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBug310435ValAccess().getLitsIDTerminalRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBug310435ValAccess().getLitsIDTerminalRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// 'kw2' lits+=STRING
protected class Bug310435Val_Group_1_1 extends GroupToken {
	
	public Bug310435Val_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBug310435ValAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Val_LitsAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// 'kw2'
protected class Bug310435Val_Kw2Keyword_1_1_0 extends KeywordToken  {
	
	public Bug310435Val_Kw2Keyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBug310435ValAccess().getKw2Keyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Val_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bug310435Val_NumberSignDigitTwoDigitOneKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// lits+=STRING
protected class Bug310435Val_LitsAssignment_1_1_1 extends AssignmentToken  {
	
	public Bug310435Val_LitsAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBug310435ValAccess().getLitsAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bug310435Val_Kw2Keyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lits",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lits");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBug310435ValAccess().getLitsSTRINGTerminalRuleCall_1_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBug310435ValAccess().getLitsSTRINGTerminalRuleCall_1_1_1_0();
			return obj;
		}
		return null;
	}

}




/************ end Rule Bug310435Val ****************/


/************ begin Rule CrossRefNameTest ****************
 *
 * / * SuppressWarnings[noInstantiation] * / CrossRefNameTest:
 * 	"#22" named+=CrossRefNamed* "kw1" ("kw2" ref+=[CrossRefNamed|ID1] | "kw3" ref+=[CrossRefNamed|ID2])*;
 *
 **/

// "#22" named+=CrossRefNamed* "kw1" ("kw2" ref+=[CrossRefNamed|ID1] | "kw3" ref+=[CrossRefNamed|ID2])*
protected class CrossRefNameTest_Group extends GroupToken {
	
	public CrossRefNameTest_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCrossRefNameTestAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CrossRefNameTest_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CrossRefNameTest_Kw1Keyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCrossRefNameTestRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "#22"
protected class CrossRefNameTest_NumberSignDigitTwoDigitTwoKeyword_0 extends KeywordToken  {
	
	public CrossRefNameTest_NumberSignDigitTwoDigitTwoKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCrossRefNameTestAccess().getNumberSignDigitTwoDigitTwoKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// named+=CrossRefNamed*
protected class CrossRefNameTest_NamedAssignment_1 extends AssignmentToken  {
	
	public CrossRefNameTest_NamedAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCrossRefNameTestAccess().getNamedAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CrossRefNamed_NameAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("named",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("named");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCrossRefNamedRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCrossRefNameTestAccess().getNamedCrossRefNamedParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new CrossRefNameTest_NamedAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new CrossRefNameTest_NumberSignDigitTwoDigitTwoKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "kw1"
protected class CrossRefNameTest_Kw1Keyword_2 extends KeywordToken  {
	
	public CrossRefNameTest_Kw1Keyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCrossRefNameTestAccess().getKw1Keyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CrossRefNameTest_NamedAssignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CrossRefNameTest_NumberSignDigitTwoDigitTwoKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ("kw2" ref+=[CrossRefNamed|ID1] | "kw3" ref+=[CrossRefNamed|ID2])*
protected class CrossRefNameTest_Alternatives_3 extends AlternativesToken {

	public CrossRefNameTest_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getCrossRefNameTestAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CrossRefNameTest_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CrossRefNameTest_Group_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "kw2" ref+=[CrossRefNamed|ID1]
protected class CrossRefNameTest_Group_3_0 extends GroupToken {
	
	public CrossRefNameTest_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCrossRefNameTestAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CrossRefNameTest_RefAssignment_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw2"
protected class CrossRefNameTest_Kw2Keyword_3_0_0 extends KeywordToken  {
	
	public CrossRefNameTest_Kw2Keyword_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCrossRefNameTestAccess().getKw2Keyword_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CrossRefNameTest_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CrossRefNameTest_Kw1Keyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ref+=[CrossRefNamed|ID1]
protected class CrossRefNameTest_RefAssignment_3_0_1 extends AssignmentToken  {
	
	public CrossRefNameTest_RefAssignment_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCrossRefNameTestAccess().getRefAssignment_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CrossRefNameTest_Kw2Keyword_3_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCrossRefNameTestAccess().getRefCrossRefNamedCrossReference_3_0_1_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getCrossRefNameTestAccess().getRefCrossRefNamedCrossReference_3_0_1_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getCrossRefNameTestAccess().getRefCrossRefNamedCrossReference_3_0_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// "kw3" ref+=[CrossRefNamed|ID2]
protected class CrossRefNameTest_Group_3_1 extends GroupToken {
	
	public CrossRefNameTest_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCrossRefNameTestAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CrossRefNameTest_RefAssignment_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "kw3"
protected class CrossRefNameTest_Kw3Keyword_3_1_0 extends KeywordToken  {
	
	public CrossRefNameTest_Kw3Keyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCrossRefNameTestAccess().getKw3Keyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CrossRefNameTest_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CrossRefNameTest_Kw1Keyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ref+=[CrossRefNamed|ID2]
protected class CrossRefNameTest_RefAssignment_3_1_1 extends AssignmentToken  {
	
	public CrossRefNameTest_RefAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCrossRefNameTestAccess().getRefAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CrossRefNameTest_Kw3Keyword_3_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ref");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCrossRefNameTestAccess().getRefCrossRefNamedCrossReference_3_1_1_0().getType().getClassifier()) && crossRefSerializer.isValid(obj.getEObject(), grammarAccess.getCrossRefNameTestAccess().getRefCrossRefNamedCrossReference_3_1_1_0(), (EObject)value , null)) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getCrossRefNameTestAccess().getRefCrossRefNamedCrossReference_3_1_1_0(); 
				return obj;
			}
		}
		return null;
	}

}




/************ end Rule CrossRefNameTest ****************/


/************ begin Rule CrossRefNamed ****************
 *
 * CrossRefNamed:
 * 	name=(ID1 | ID2);
 *
 **/

// name=(ID1 | ID2)
protected class CrossRefNamed_NameAssignment extends AssignmentToken  {
	
	public CrossRefNamed_NameAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCrossRefNamedAccess().getNameAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCrossRefNamedRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCrossRefNamedAccess().getNameID1TerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCrossRefNamedAccess().getNameID1TerminalRuleCall_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCrossRefNamedAccess().getNameID2TerminalRuleCall_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCrossRefNamedAccess().getNameID2TerminalRuleCall_0_1();
			return obj;
		}
		return null;
	}

}

/************ end Rule CrossRefNamed ****************/

}
