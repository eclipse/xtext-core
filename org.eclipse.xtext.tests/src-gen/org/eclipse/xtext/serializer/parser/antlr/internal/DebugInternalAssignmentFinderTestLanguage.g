/*
 * generated by Xtext
 */
grammar DebugInternalAssignmentFinderTestLanguage ;

// Rule Model
ruleModel :
	'#00' ruleKeywordVal |
	'#01' ruleTerminalVal |
	'#02' ruleEnumVal |
	'#03' ruleKeywordBool |
	'#04' ruleTerminalBool |
	'#05' ruleEnumBool |
	'#06' ruleMixedBool |
	'#07' ruleMixedValue |
	'#08' ruleContainmentRef |
	'#09' ruleCrossRef
;

// Rule KeywordVal
ruleKeywordVal :
	'kw1' |
	'kw2'
;

// Rule TerminalVal
ruleTerminalVal :
	RULE_TERMINAL1 |
	RULE_TERMINAL2 |
	'%foo'
;

// Rule EnumVal
ruleEnumVal :
	ruleEnum1 |
	ruleEnum2
;

// Rule KeywordBool
ruleKeywordBool :
	'kw1' |
	'kw2'
;

// Rule TerminalBool
ruleTerminalBool :
	RULE_TERMINAL1 |
	RULE_TERMINAL2 |
	'%foo'
;

// Rule EnumBool
ruleEnumBool :
	ruleEnum1 |
	ruleEnum2
;

// Rule MixedBool
ruleMixedBool :
	'kw1' |
	ruleBoolean
;

// Rule Boolean
ruleBoolean :
	'true' |
	'false'
;

// Rule MixedValue
ruleMixedValue :
	ruleEnum1 |
	ruleDatEnum
;

// Rule DatEnum
ruleDatEnum :
	'lit3'
;

// Rule ContainmentRef
ruleContainmentRef :
	ruleContainmentRef1 |
	ruleContainmentRef2
;

// Rule ContainmentRef1
ruleContainmentRef1 :
	'kw1' RULE_ID
;

// Rule ContainmentRef2
ruleContainmentRef2 :
	'kw2' RULE_ID
;

// Rule CrossRef
ruleCrossRef :
	(
		RULE_TERMINAL1 |
		RULE_TERMINAL2
	) (
		RULE_TERMINAL1 |
		RULE_TERMINAL2
	)
;

// Rule Enum1
ruleEnum1 :
	'lit1'
;

// Rule Enum2
ruleEnum2 :
	'lit2'
;

RULE_TERMINAL1 :
	'%' 'A' .. 'Z'*
;

RULE_TERMINAL2 :
	'%' 'a' .. 'z'*
;

RULE_ID :
	'^'? (
		'a' .. 'z' |
		'A' .. 'Z' |
		'_'
	) (
		'a' .. 'z' |
		'A' .. 'Z' |
		'_' |
		'0' .. '9'
	)*
;

RULE_INT :
	'0' .. '9'+
;

RULE_STRING :
	'"' (
		'\\' . |
		~ (
			'\\' |
			'"'
		)
	)* '"' |
	'\'' (
		'\\' . |
		~ (
			'\\' |
			'\''
		)
	)* '\''
;

RULE_ML_COMMENT :
	'/*' (
		options { greedy = false ; } : .
	)* '*/' { skip(); }
;

RULE_SL_COMMENT :
	'//' ~ (
		'\n' |
		'\r'
	)* (
		'\r'? '\n'
	)? { skip(); }
;

RULE_WS :
	(
		' ' |
		'\t' |
		'\r' |
		'\n'
	)+ { skip(); }
;

RULE_ANY_OTHER :
	.
;