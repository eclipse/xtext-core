/*
 * generated by Xtext
 */
grammar DebugInternalRegionAccessTestLanguage ;

// Rule Root
ruleRoot :
	ruleSimple |
	ruleDelegation |
	ruleUnassigned |
	rulePrefixedUnassigned |
	'5' ruleExpression |
	'6' ruleMixed |
	'7' 'action'? ruleMixed
;

// Rule Simple
ruleSimple :
	'1' RULE_ID
;

// Rule Delegation
ruleDelegation :
	'2' ruleDelegate
;

// Rule Unassigned
ruleUnassigned :
	'3' ruleDelegate
;

// Rule PrefixedUnassigned
rulePrefixedUnassigned :
	'4' rulePrefixedDelegate
;

// Rule PrefixedDelegate
rulePrefixedDelegate :
	'prefix' ruleDelegate
;

// Rule Delegate
ruleDelegate :
	RULE_ID
;

// Rule Expression
ruleExpression :
	rulePrimary (
		'+' rulePrimary
	)*
;

// Rule Primary
rulePrimary :
	RULE_ID |
	ruleParenthesized
;

// Rule Parenthesized
ruleParenthesized :
	'(' ruleExpression ')'
;

// Rule Mixed
ruleMixed :
	'(' (
		'unassigned' (
			RULE_ID |
			ruleDatatype
		)
	)? (
		(
			'fragment' ruleFragment
		)? |
		ruleMixed |
		(
			RULE_ID |
			'child' ruleMixed |
			ruleDatatype |
			'ref' RULE_ID |
			ruleEnum
		)
	) ')' (
		'action' (
			ruleMixed 'end'
		)?
	)*
;

// Rule Datatype
ruleDatatype :
	'datatype' (
		ruleDatatype |
		RULE_ID
	)
;

// Rule Fragment
ruleFragment :
	RULE_ID |
	'child' ruleMixed |
	'recursion' ruleFragment
;

// Rule Enum
ruleEnum :
	'lit1' |
	'lit2'
;

RULE_ID :
	'^'? (
		'a' .. 'z' |
		'A' .. 'Z' |
		'_'
	) (
		'a' .. 'z' |
		'A' .. 'Z' |
		'_' |
		'0' .. '9'
	)*
;

RULE_INT :
	'0' .. '9'+
;

RULE_STRING :
	'"' (
		'\\' . |
		~ (
			'\\' |
			'"'
		)
	)* '"' |
	'\'' (
		'\\' . |
		~ (
			'\\' |
			'\''
		)
	)* '\''
;

RULE_ML_COMMENT :
	'/*' (
		options { greedy = false ; } : .
	)* '*/' { skip(); }
;

RULE_SL_COMMENT :
	'//' ~ (
		'\n' |
		'\r'
	)* (
		'\r'? '\n'
	)? { skip(); }
;

RULE_WS :
	(
		' ' |
		'\t' |
		'\r' |
		'\n'
	)+ { skip(); }
;

RULE_ANY_OTHER :
	.
;