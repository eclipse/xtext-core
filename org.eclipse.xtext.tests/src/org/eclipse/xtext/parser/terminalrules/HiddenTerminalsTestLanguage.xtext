/*******************************************************************************
 * Copyright (c) 2008 itemis AG (http://www.itemis.eu) and others.
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 *******************************************************************************/
grammar org.eclipse.xtext.parser.terminalrules.HiddenTerminalsTestLanguage

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate hiddenTerminalsTestLanguage "http://www.eclipse.org/2008/tmf/xtext/HiddenTerminalsTest"
 
Model:
  WithoutHiddens | WithHiddens | OverridingHiddens | InheritingHiddens | DatatypeHiddens
;

WithoutHiddens:
  'without' spaces+=WS 'hiddens' spaces+=WS? valid?=';';
  
WithHiddens hidden(WS, ML_COMMENT, SL_COMMENT):
  'with' 'hiddens' valid?=';';
  
OverridingHiddens hidden(WS, ML_COMMENT, SL_COMMENT):
  'overriding' 'hiddens' '(' called=OverridingHiddensCall ')' valid?=';';
  
OverridingHiddensCall hidden():
  'call' (spaces+=WS)? valid?=';';

InheritingHiddens hidden(WS, ML_COMMENT, SL_COMMENT):
  'inheriting' 'hiddens' '(' (called=InheritingHiddensCall | hidingCalled=HidingHiddens) ')' valid?=';';
  
DatatypeHiddens:
  'datatype' valid?=DatatypeRule;
  
DatatypeRule returns ecore::EString hidden(WS):
  'rule' ';';
  
HidingHiddens hidden():
  'hiding' space=WS called=InheritingHiddensCall;
  
InheritingHiddensCall:
  'call' valid?=';';
  
terminal ML_COMMENT	: '/*' -> '*/';
terminal SL_COMMENT 	: '//' !('\n'|'\r')* ('\r'? '\n')?;

terminal WS			: (' '|'\t'|'\r'|'\n')+;

terminal ANY_OTHER: .;